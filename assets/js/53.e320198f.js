(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{388:function(t,s,a){"use strict";a.r(s);var e=a(7),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("项目使用 Junit5 + Mockito 实现单元测试，提升代码质量、重复测试效率、部署可靠性等。")]),t._v(" "),s("p",[t._v("截止目前，项目已经有 500+ 测试用例。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("内容推荐")]),t._v(" "),s("p",[t._v("如果你想系统学习单元测试，可以阅读"),s("a",{attrs:{href:"https://www.iocoder.cn/Architecture/books-recommended/?yudao",target:"_blank",rel:"noopener noreferrer"}},[t._v("《有效的单元测试》"),s("OutboundLink")],1),t._v("这本书，非常适合 Java 工程师。")]),t._v(" "),s("p",[t._v("如果只是想学习 Spring Boot Test 的话，可以阅读 "),s("a",{attrs:{href:"https://www.iocoder.cn/Spring-Boot/Unit-Test/?yudao",target:"_blank",rel:"noopener noreferrer"}},[t._v("《芋道 Spring Boot 单元测试 Test 入门 》"),s("OutboundLink")],1),t._v(" 文章。")])]),t._v(" "),s("h2",{attrs:{id:"_1-测试组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-测试组件"}},[t._v("#")]),t._v(" 1.测试组件")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-test/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("yudao-spring-boot-starter-test")]),s("OutboundLink")],1),t._v(" 是项目提供的测试组件，用于单元测试、集成测试等等。")]),t._v(" "),s("h3",{attrs:{id:"_1-1-快速测试的基类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-快速测试的基类"}},[t._v("#")]),t._v(" 1.1 快速测试的基类")]),t._v(" "),s("p",[t._v("测试组件提供了 4 种单元测试的基类，通过继承它们，可以快速的构建单元测试的环境。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("基类")]),t._v(" "),s("th",[t._v("作用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-test/src/main/java/cn/iocoder/yudao/framework/test/core/ut/BaseMockitoUnitTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("BaseMockitoUnitTest"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("纯 Mockito 的单元测试")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-test/src/main/java/cn/iocoder/yudao/framework/test/core/ut/BaseDbUnitTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("BaseDbUnitTest"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("使用内嵌的 H2 数据库的单元测试")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-test/src/main/java/cn/iocoder/yudao/framework/test/core/ut/BaseRedisUnitTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("BaseRedisUnitTest"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("使用内嵌的 Redis 缓存的单元测试")])]),t._v(" "),s("tr",[s("td",[s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-test/src/main/java/cn/iocoder/yudao/framework/test/core/ut/BaseDbAndRedisUnitTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("BaseDbAndRedisUnitTest"),s("OutboundLink")],1)]),t._v(" "),s("td",[t._v("使用内嵌的 H2 数据库 + Redis 缓存的单元测试")])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("疑问：什么是内嵌的 Redis 缓存？")]),t._v(" "),s("p",[t._v("基于 "),s("a",{attrs:{href:"https://github.com/fppt/jedis-mock",target:"_blank",rel:"noopener noreferrer"}},[t._v("jedis-mock"),s("OutboundLink")],1),t._v(" 开源项目，通过 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-test/src/main/java/cn/iocoder/yudao/framework/test/config/RedisTestConfiguration.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("RedisTestConfiguration"),s("OutboundLink")],1),t._v(" 配置类，启动一个 Redis 进程。一般情况下，会使用 16379 端口。")])]),t._v(" "),s("h3",{attrs:{id:"_1-2-测试工具类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-测试工具类"}},[t._v("#")]),t._v(" 1.2 测试工具类")]),t._v(" "),s("p",[t._v("① "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-test/src/main/java/cn/iocoder/yudao/framework/test/core/util/RandomUtils.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("RandomUtils"),s("OutboundLink")],1),t._v(" 基于 "),s("a",{attrs:{href:"https://github.com/mtedone/podam",target:"_blank",rel:"noopener noreferrer"}},[t._v("podam"),s("OutboundLink")],1),t._v(" 开源项目，实现 Bean 对象的随机生成。")]),t._v(" "),s("p",[t._v("② "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-test/src/main/java/cn/iocoder/yudao/framework/test/core/util/AssertUtils",target:"_blank",rel:"noopener noreferrer"}},[t._v("AssertUtils"),s("OutboundLink")],1),t._v(" 封装 Junit 的 Assert 断言，实现 Bean 对象的断言，支持忽略部分属性。")]),t._v(" "),s("h2",{attrs:{id:"_2-basedbunittest-实战案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-basedbunittest-实战案例"}},[t._v("#")]),t._v(" 2. BaseDbUnitTest 实战案例")]),t._v(" "),s("p",[t._v("以字典类型模块的 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/dict/DictDataServiceImpl.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DictTypeServiceImpl"),s("OutboundLink")],1),t._v(" 为例子，讲解它的 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/test/java/cn/iocoder/yudao/module/system/service/dict/DictDataServiceTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DictTypeServiceTest"),s("OutboundLink")],1),t._v(" 单元测试的编写实现。")]),t._v(" "),s("h3",{attrs:{id:"_2-1-引入依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-引入依赖"}},[t._v("#")]),t._v(" 2.1 引入依赖")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("yudao-module-system-biz")]),t._v(" 模块中，引入 "),s("code",[t._v("yudao-spring-boot-starter-test")]),t._v(" 技术组件。如下所示：")]),t._v(" "),s("div",{staticClass:"language-XML extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("cn.iocoder.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("yudao-spring-boot-starter-test"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("scope")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("test"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("scope")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-2-新建-ut-配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-新建-ut-配置文件"}},[t._v("#")]),t._v(" 2.2 新建 ut 配置文件")]),t._v(" "),s("p",[t._v("在 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/test/resources/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("test/resources")]),s("OutboundLink")],1),t._v(" 目录，新建单元测试的 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/test/resources/application-unit-test.yaml",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("application-unit-test.yaml")]),s("OutboundLink")],1),t._v(" 配置文件，内容如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/02.png",alt:"application-unit-test.yaml` 配置文件"}})]),t._v(" "),s("h3",{attrs:{id:"_2-3-添加-h2-sql-脚本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-添加-h2-sql-脚本"}},[t._v("#")]),t._v(" 2.3 添加 H2 SQL 脚本")]),t._v(" "),s("p",[t._v("修改 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/test/resources/sql/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("test/resources/sql")]),s("OutboundLink")],1),t._v(" 目录的两个 H2 SQL 脚本：")]),t._v(" "),s("p",[t._v("① 在 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/test/resources/sql/create_tables.sql",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("create_tables.sql")]),s("OutboundLink")],1),t._v(" 文件中，添加 "),s("code",[t._v("system_dict_type")]),t._v(" 的 H2 建表语句。SQL 如下：")]),t._v(" "),s("div",{staticClass:"language-SQL extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"system_dict_type"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bigint")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" GENERATED "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IDENTITY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"type"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"status"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("tinyint")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"remark"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"creator"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"create_time"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("timestamp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CURRENT_TIMESTAMP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"updater"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"update_time"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("timestamp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CURRENT_TIMESTAMP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deleted"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bit")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("FALSE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'字典类型表'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("注意，H2 和 MySQL 的建表语句有区别，需要手动进行转换。如果你不想进行转换，可以使用 [基础设置 -> 代码生成] 菜单的代码生成器功能，如下图所示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/03.png",alt:"基础设置 -> 代码生成"}})]),t._v(" "),s("p",[t._v("② 在 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/test/resources/sql/clean.sql",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("clean.sql")]),s("OutboundLink")],1),t._v(" 文件中，添加 "),s("code",[t._v("system_dict_type")]),t._v(" 的清空数据的语句。SQL 如下：")]),t._v(" "),s("div",{staticClass:"language-SQL extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"system_dict_type"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("每次单元测试的方法执行完后，会执行 "),s("code",[t._v("clean.sql")]),t._v(" 脚本，进行数据的清理，保证每个单元测试的方法的数据隔离性。")]),t._v(" "),s("h3",{attrs:{id:"_2-3-新建-dicttypeservicetest-类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-新建-dicttypeservicetest-类"}},[t._v("#")]),t._v(" 2.3 新建 DictTypeServiceTest 类")]),t._v(" "),s("p",[t._v("新建 DictTypeServiceTest 测试类，继承 BaseMockitoUnitTest 基类，并完成它的配置。代码如下图所示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/01.png",alt:"DictTypeServiceTest 总体"}})]),t._v(" "),s("ul",[s("li",[t._v("属于自己模块的，使用 Spring 初始化成真实的 Bean，然后通过 "),s("code",[t._v("@Resource")]),t._v(" 注入。例如说："),s("code",[t._v("dictTypeService")]),t._v("、"),s("code",[t._v("dictTypeMapper")])]),t._v(" "),s("li",[t._v("属于别人模块的，使用 Spring "),s("code",[t._v("@MockBean")]),t._v(" 注解，模拟 Mock 成一个 Bean 后注入。例如说："),s("code",[t._v("dictDataService")])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("疑问：为什么有的进行 Mock，有的不进行 Mock 呢？")]),t._v(" "),s("ul",[s("li",[t._v("单元测试需要避免对外部的依赖，而 "),s("code",[t._v("dictDataService")]),t._v(" 是外部依赖，所以需要 Mock 掉。")]),t._v(" "),s("li",[s("code",[t._v("dictTypeMapper")]),t._v(" 某种程度来说，也是一种外部依赖，但是通过内嵌的 H2 内存数据库，进行“真实”的数据库操作，反而单元测试的编写效率更高，效果更好，所以不需要 Mock 掉。")])])]),t._v(" "),s("p",[t._v("另外，[基础设置 -> 代码生成] 菜单的代码生成器功能，已经生成了绝大多数的单元测试的逻辑，这里主要是希望让你了解单元测试的具体使用，所以并没有使用它。如下图所示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/04.png",alt:"基础设置 -> 代码生成"}})]),t._v(" "),s("h3",{attrs:{id:"_2-4-新增方法的单测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-新增方法的单测"}},[t._v("#")]),t._v(" 2.4 新增方法的单测")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/05.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_2-5-修改方法的单测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-修改方法的单测"}},[t._v("#")]),t._v(" 2.5 修改方法的单测")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/06.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_2-6-删除方法的单测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-删除方法的单测"}},[t._v("#")]),t._v(" 2.6 删除方法的单测")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/07.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_2-7-单条查询方法的单测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-单条查询方法的单测"}},[t._v("#")]),t._v(" 2.7 单条查询方法的单测")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/08.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"_2-8-分页查询方法的单测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-8-分页查询方法的单测"}},[t._v("#")]),t._v(" 2.8 分页查询方法的单测")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/09.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"_3-basemockitounittest-实战案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-basemockitounittest-实战案例"}},[t._v("#")]),t._v(" 3. BaseMockitoUnitTest 实战案例")]),t._v(" "),s("p",[t._v("一些类由于不依赖 MySQL 和 Redis，可以通过继承 BaseMockitoUnitTest 基类，实现纯 Mockito 的单元测试。例如说 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/test/java/cn/iocoder/yudao/module/system/service/sms/SmsSendServiceTest.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("SmsSendServiceTest"),s("OutboundLink")],1),t._v(" 单元测试类，代码如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/10.png",alt:""}})]),t._v(" "),s("p",[t._v("具体 SmsSendServiceTest 的每个测试方法，和 DictTypeServiceTest 并没有什么差别，还是 Mock 模拟 + Assert 断言 + Verify 调用，你可以自己花点时间瞅瞅。")])])}),[],!1,null,null,null);s.default=r.exports}}]);