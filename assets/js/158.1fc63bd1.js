(window.webpackJsonp=window.webpackJsonp||[]).push([[158],{487:function(a,t,e){"use strict";e.r(t);var r=e(7),n=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("项目基于 Spring AI + 自己实现的 "),t("code",[a._v("models/baichuan")]),a._v("，实现 "),t("a",{attrs:{href:"https://www.baichuan-ai.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("百川智能"),t("OutboundLink")],1),a._v(" 的接入：")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("功能")]),a._v(" "),t("th",[a._v("模型")]),a._v(" "),t("th",[a._v("Spring AI 客户端")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("AI 对话")]),a._v(" "),t("td",[a._v("deepseek-chat、deepseek-reasoner")]),a._v(" "),t("td",[a._v("BaiChuanChatModel")])]),a._v(" "),t("tr",[t("td",[a._v("AI 绘画")]),a._v(" "),t("td",[a._v("不支持")]),a._v(" "),t("td",[a._v("暂不支持")])])])]),a._v(" "),t("h2",{attrs:{id:"_1-申请密钥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-申请密钥"}},[a._v("#")]),a._v(" 1. 申请密钥")]),a._v(" "),t("p",[a._v("百川智能有"),t("a",{attrs:{href:"https://github.com/baichuan-inc",target:"_blank",rel:"noopener noreferrer"}},[a._v("开源版本"),t("OutboundLink")],1),a._v("，所以我们可以私有化部署。")]),a._v(" "),t("p",[a._v("当然，我们也可以直接使用官方的 API 服务，提供了一定的免费额度，使用也比较方便")]),a._v(" "),t("p",[a._v("下面，我们来看看这两种方式怎么申请（部署）？")]),a._v(" "),t("h3",{attrs:{id:"_1-1-方式一-官方-api-申请"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-方式一-官方-api-申请"}},[a._v("#")]),a._v(" 1.1 方式一：官方 API 申请")]),a._v(" "),t("p",[a._v("① 在 "),t("a",{attrs:{href:"https://platform.baichuan-ai.com/homePage",target:"_blank",rel:"noopener noreferrer"}},[a._v("开放平台"),t("OutboundLink")],1),a._v(" 上，注册一个账号。目前，默认注册就送 500w tokens，还是蛮爽的。")]),a._v(" "),t("p",[a._v("② 在 "),t("a",{attrs:{href:"https://platform.baichuan-ai.com/console/apikey",target:"_blank",rel:"noopener noreferrer"}},[a._v("API Key 管理"),t("OutboundLink")],1),a._v(" 菜单，创建一个 API key 即可。")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("申请完成后，可以在我们系统的 [AI 大模型 -> 控制台 -> API 密钥] 菜单，进行密钥的配置。只需要填写“密钥”，不需要填写“自定义 API URL”（因为 Spring AI 默认官方地址）。如下图所示：")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/AI%E6%89%8B%E5%86%8C/%E6%A8%A1%E5%9E%8B%E6%8E%A5%E5%85%A5/%E7%99%BE%E5%B7%9D%E6%99%BA%E8%83%BD-%E5%AE%98%E6%96%B9.png",alt:"官方的密钥配置"}})]),a._v(" "),t("h3",{attrs:{id:"_1-2-方式二-私有化部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-方式二-私有化部署"}},[a._v("#")]),a._v(" 1.2 方式二：私有化部署")]),a._v(" "),t("p",[a._v("参考 "),t("a",{attrs:{href:"https://github.com/baichuan-inc",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/baichuan-inc"),t("OutboundLink")],1),a._v(" 进行部署。")]),a._v(" "),t("p",[a._v("当然，貌似也能用 Ollama 部署，但是我没试，可见 "),t("a",{attrs:{href:"https://ollama.com/search?q=baichuan",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://ollama.com/search?q=baichuan"),t("OutboundLink")],1),a._v(" 。")]),a._v(" "),t("h3",{attrs:{id:"_2-1-ai-对话"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-ai-对话"}},[a._v("#")]),a._v(" 2.1 AI 对话")]),a._v(" "),t("p",[a._v("使用 "),t("RouterLink",{attrs:{to:"/ai/chat/"}},[a._v("《AI 对话》")]),a._v(" 时，需要在 [AI 大模型 -> 控制台 -> 模型配置] 菜单，配置对应的聊天模型。")],1),a._v(" "),t("p",[a._v("模型有："),t("code",[a._v("Baichuan4-Turbo")]),a._v("、"),t("code",[a._v("Baichuan4-Air")]),a._v(" 等等，可通过 "),t("a",{attrs:{href:"https://platform.baichuan-ai.com/docs/api",target:"_blank",rel:"noopener noreferrer"}},[a._v("《接口文档 —— 通用大模型》"),t("OutboundLink")],1),a._v(" 查看。")]),a._v(" "),t("p",[a._v("注意，每个模型标识的 "),t("code",[a._v("max_tokens")]),a._v("（回复数 Token 数）最大是 2028，具体也是看上述链接。")]),a._v(" "),t("h3",{attrs:{id:"_2-2-ai-绘图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-ai-绘图"}},[a._v("#")]),a._v(" 2.2 AI 绘图")]),a._v(" "),t("p",[a._v("百川暂时不支持绘图模型！！！")]),a._v(" "),t("h2",{attrs:{id:"_3-如何使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何使用"}},[a._v("#")]),a._v(" 3. 如何使用？")]),a._v(" "),t("p",[a._v("① 如果你的项目里需要直接通过 "),t("code",[a._v("@Resource")]),a._v(" 注入 BaiChuanChatModel 等对象，需要把 "),t("code",[a._v("application.yaml")]),a._v(" 配置文件里的 "),t("code",[a._v("yudao.ai.baichuan")]),a._v(" 配置项，替换成你的！")]),a._v(" "),t("div",{staticClass:"language-YAML extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("yudao")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("ai")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("baichuan")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 百川智能")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("enable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("true")]),a._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("api-key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" sk"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("abc\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("model")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" Baichuan4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("Turbo\n")])])]),t("p",[a._v("② 如果你希望使用 [AI 大模型 -> 控制台 -> API 密钥] 菜单的密钥配置，则可以通过 AiModelService 的 "),t("code",[a._v("#getChatModel(...)")]),a._v(" 方法，获取对应的模型对象。")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("① 和 ② 这两者的后续使用，就是标准的 Spring AI 客户端的使用，调用对应的方法即可。")]),a._v(" "),t("p",[a._v("另外，BaiChuanChatModelTests 里有对应的测试用例，可以参考。")])])}),[],!1,null,null,null);t.default=n.exports}}]);