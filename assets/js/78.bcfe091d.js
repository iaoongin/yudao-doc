(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{407:function(e,t,s){"use strict";s.r(t);var a=s(7),r=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("友情提示：")]),e._v(" "),t("p",[e._v("在 BPMN 设计流程图，配置完监听器后，一定要发布流程，否则监听器不会生效。")])]),e._v(" "),t("h2",{attrs:{id:"_1-执行监听器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-执行监听器"}},[e._v("#")]),e._v(" 1. 执行监听器")]),e._v(" "),t("p",[e._v("执行监听器（execution listener），可以在流程执行中发生特定的事件时，执行外部 Java 代码或计算表达式。可以被捕获的事件有：")]),e._v(" "),t("ul",[t("li",[e._v("流程实例的启动和结束")]),e._v(" "),t("li",[e._v("流程执行转移")]),e._v(" "),t("li",[e._v("活动的启动和结束")]),e._v(" "),t("li",[e._v("网关的启动和结束")]),e._v(" "),t("li",[e._v("中间事件的启动和结束")]),e._v(" "),t("li",[e._v("启动事件的结束，和结束事件的启动")])]),e._v(" "),t("p",[e._v("总结来说，可以监听的事件只有 start 开始、end 结束。")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("学习文档：")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://tkjohn.github.io/flowable-userguide/#executionListeners",target:"_blank",rel:"noopener noreferrer"}},[e._v("《Flowable BPMN 用户手册 (v 6.3.0) —— 执行监听器》"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://developer.aliyun.com/article/1233153",target:"_blank",rel:"noopener noreferrer"}},[e._v("《Flowable 服务任务执行的三种方式》"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://blog.csdn.net/CCCout/article/details/132454867",target:"_blank",rel:"noopener noreferrer"}},[e._v("《Flowable 服务任务类，表达式，委托表达式（代理表达式）》"),t("OutboundLink")],1)])])]),e._v(" "),t("p",[e._v("我们可以在 BPMN 设计流程图时，给某个节点添加执行监听器，监听器可以是 Java 类、表达式、委托表达式。如下图所示：")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%89%8B%E5%86%8C/%E7%9B%91%E5%90%AC%E5%99%A8/%E6%89%A7%E8%A1%8C%E7%9B%91%E5%90%AC%E5%99%A8%E7%9A%84%E9%85%8D%E7%BD%AE.png",alt:"执行监听器"}})]),e._v(" "),t("p",[e._v("这三种监听器怎么使用呢？我们逐个来看看。")]),e._v(" "),t("h3",{attrs:{id:"_1-1-java-类监听器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-java-类监听器"}},[e._v("#")]),e._v(" 1.1 Java 类监听器")]),e._v(" "),t("p",[e._v("① 新建一个 "),t("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/listener/demo/exection/DemoDelegateClassExecutionListener.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("DemoDelegateClassExecutionListener"),t("OutboundLink")],1),e._v(" 类，需要实现 "),t("code",[e._v("org.flowable.engine.delegate.JavaDelegate")]),e._v(" 接口，如下图所示：")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%89%8B%E5%86%8C/%E7%9B%91%E5%90%AC%E5%99%A8/DemoDelegateClassExecutionListener.png",alt:"DemoDelegateClassExecutionListener"}})]),e._v(" "),t("p",[e._v("② 在 BPMN 流程图中，配置 Java 类监听器，如下图所示：")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%89%8B%E5%86%8C/%E7%9B%91%E5%90%AC%E5%99%A8/DemoDelegateClassExecutionListenerConfig.png",alt:"配置监听器"}})]),e._v(" "),t("p",[e._v("注意，图中填写的是 "),t("code",[e._v("cn.iocoder.yudao.module.bpm.framework.flowable.core.listener.demo.exection.DemoDelegateClassExecutionListener")]),e._v(" 全路径。")]),e._v(" "),t("h3",{attrs:{id:"_1-2-委托表达式监听器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-委托表达式监听器"}},[e._v("#")]),e._v(" 1.2 委托表达式监听器")]),e._v(" "),t("p",[e._v("① 新建一个 "),t("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/listener/demo/exection/DemoDelegateExpressionExecutionListener.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("DemoDelegateExpressionExecutionListener"),t("OutboundLink")],1),e._v(" 类，也需要实现 "),t("code",[e._v("org.flowable.engine.delegate.JavaDelegate")]),e._v(" 接口，如下图所示：")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%89%8B%E5%86%8C/%E7%9B%91%E5%90%AC%E5%99%A8/DemoDelegateExpressionExecutionListener.png",alt:"DemoDelegateExpressionExecutionListener"}})]),e._v(" "),t("p",[e._v("并且，需要声明成 Spring Bean！本质上，“委托表达式”是“Java 类”的特例，和 Spring 做了集成。")]),e._v(" "),t("p",[e._v("② 在 BPMN 流程图中，配置委托表达式监听器，如下图所示：")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%89%8B%E5%86%8C/%E7%9B%91%E5%90%AC%E5%99%A8/DemoDelegateExpressionExecutionListenerConfig.png",alt:"配置监听器"}})]),e._v(" "),t("p",[e._v("注意，图中填写的是 "),t("code",[e._v("${demoDelegateExpressionExecutionListener}")]),e._v("，这个是 Spring Bean 的名称。")]),e._v(" "),t("h3",{attrs:{id:"_1-3-spring-表达式监听器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-spring-表达式监听器"}},[e._v("#")]),e._v(" 1.3 Spring 表达式监听器")]),e._v(" "),t("p",[e._v("① 新建一个 "),t("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/listener/demo/exection/DemoSpringExpressionExecutionListener.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("DemoSpringExpressionExecutionListener"),t("OutboundLink")],1),e._v(" 类，只需要声明成 Spring Bean，如下图所示：")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%89%8B%E5%86%8C/%E7%9B%91%E5%90%AC%E5%99%A8/DemoSpringExpressionExecutionListener.png",alt:"DemoSpringExpressionExecutionListener"}})]),e._v(" "),t("p",[e._v("② 在 BPMN 流程图中，配置 Spring 表达式监听器，如下图所示：")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%89%8B%E5%86%8C/%E7%9B%91%E5%90%AC%E5%99%A8/DemoSpringExpressionExecutionListenerConfig.png",alt:"配置监听器"}})]),e._v(" "),t("p",[e._v("注意，图中填写的是 "),t("code",[e._v("${demoSpringExpressionExecutionListener.execute(execution)}")]),e._v("，这个就是通过 Spring EL 表达式，实现对某个 Bean 的某个方法的调用。")]),e._v(" "),t("h2",{attrs:{id:"_2-任务监听器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-任务监听器"}},[e._v("#")]),e._v(" 2. 任务监听器")]),e._v(" "),t("p",[e._v("任务监听器（task listener），用于在特定的任务相关事件发生时，执行自定义的 Java 逻辑或表达式。")]),e._v(" "),t("p",[e._v("相比执行器来说，它只能监听 UserTask 用户任务，但是事件有 create 创建、assignment 指派、complete 完成、delete 删除、update 更新、timeout 超时。")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("学习文档：")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://tkjohn.github.io/flowable-userguide/#taskListeners",target:"_blank",rel:"noopener noreferrer"}},[e._v("《Flowable BPMN 用户手册 (v 6.3.0) —— 任务监听器》"),t("OutboundLink")],1)])])]),e._v(" "),t("p",[e._v("我们可以在 BPMN 设计流程图时，给某个节点添加任务监听器，监听器可以是 Java 类、表达式、委托表达式。如下图所示：")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("友情提示：任务监听器，和执行监听器的使用基本是一致的。")])]),e._v(" "),t("h3",{attrs:{id:"_2-1-java-类监听器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-java-类监听器"}},[e._v("#")]),e._v(" 2.1 Java 类监听器")]),e._v(" "),t("p",[e._v("① 新建一个 "),t("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/listener/demo/task/DemoDelegateClassTaskListener.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("DemoDelegateClassTaskListener"),t("OutboundLink")],1),e._v(" 类，需要实现 "),t("code",[e._v("org.flowable.engine.delegate.TaskListener")]),e._v(" 接口，如下图所示：")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%89%8B%E5%86%8C/%E7%9B%91%E5%90%AC%E5%99%A8/DemoDelegateClassTaskListener.png",alt:"DemoDelegateClassTaskListener"}})]),e._v(" "),t("p",[e._v("② 在 BPMN 流程图中，配置 Java 类监听器，如下图所示：")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%89%8B%E5%86%8C/%E7%9B%91%E5%90%AC%E5%99%A8/DemoDelegateClassTaskListenerConfig.png",alt:"配置监听器"}})]),e._v(" "),t("p",[e._v("注意，图中填写的是 "),t("code",[e._v("cn.iocoder.yudao.module.bpm.framework.flowable.core.listener.demo.task.DemoDelegateClassTaskListener")]),e._v(" 全路径。")]),e._v(" "),t("h3",{attrs:{id:"_2-2-委托表达式监听器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-委托表达式监听器"}},[e._v("#")]),e._v(" 2.2 委托表达式监听器")]),e._v(" "),t("p",[e._v("① 新建一个 "),t("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/listener/demo/task/DemoDelegateExpressionTaskListener.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("DemoDelegateExpressionTaskListener"),t("OutboundLink")],1),e._v(" 类，也需要实现 "),t("code",[e._v("org.flowable.engine.delegate.TaskListener")]),e._v(" 接口，如下图所示：")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%89%8B%E5%86%8C/%E7%9B%91%E5%90%AC%E5%99%A8/DemoDelegateExpressionTaskListener.png",alt:"DemoDelegateExpressionTaskListener"}})]),e._v(" "),t("p",[e._v("并且，需要声明成 Spring Bean！本质上，“委托表达式”是“Java 类”的特例，和 Spring 做了集成。")]),e._v(" "),t("p",[e._v("② 在 BPMN 流程图中，配置委托表达式监听器，如下图所示：")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%89%8B%E5%86%8C/%E7%9B%91%E5%90%AC%E5%99%A8/DemoDelegateExpressionTaskListenerConfig.png",alt:"配置监听器"}})]),e._v(" "),t("p",[e._v("注意，图中填写的是 "),t("code",[e._v("${demoDelegateExpressionTaskListener}")]),e._v("，这个是 Spring Bean 的名称。")]),e._v(" "),t("h3",{attrs:{id:"_2-3-spring-表达式监听器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-spring-表达式监听器"}},[e._v("#")]),e._v(" 2.3 Spring 表达式监听器")]),e._v(" "),t("p",[e._v("① 新建一个 "),t("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-bpm/yudao-module-bpm-biz/src/main/java/cn/iocoder/yudao/module/bpm/framework/flowable/core/listener/demo/task/DemoSpringExpressionTaskListener.java",target:"_blank",rel:"noopener noreferrer"}},[e._v("DemoSpringExpressionTaskListener"),t("OutboundLink")],1),e._v(" 类，只需要声明成 Spring Bean，如下图所示：")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%89%8B%E5%86%8C/%E7%9B%91%E5%90%AC%E5%99%A8/DemoSpringExpressionTaskListener.png",alt:"DemoSpringExpressionTaskListener"}})]),e._v(" "),t("p",[e._v("② 在 BPMN 流程图中，配置 Spring 表达式监听器，如下图所示：")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%89%8B%E5%86%8C/%E7%9B%91%E5%90%AC%E5%99%A8/DemoSpringExpressionTaskListenerConfig.png",alt:"配置监听器"}})]),e._v(" "),t("p",[e._v("注意，图中填写的是 "),t("code",[e._v("${demoSpringExpressionTaskListener.notify(task)}")]),e._v("，这个就是通过 Spring EL 表达式，实现对某个 Bean 的某个方法的调用。")]),e._v(" "),t("h2",{attrs:{id:"_3-流程监听器的模版"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-流程监听器的模版"}},[e._v("#")]),e._v(" 3. 流程监听器的模版")]),e._v(" "),t("p",[e._v("在 [工作流程 -> 流程管理 -> 流程监控器] 菜单，可以配置执行监听器、任务监听器的模版。如下图所示：")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%89%8B%E5%86%8C/%E7%9B%91%E5%90%AC%E5%99%A8/%E6%B5%81%E7%A8%8B%E7%9B%91%E6%8E%A7%E5%99%A8.png",alt:"流程监控器"}})]),e._v(" "),t("ul",[t("li",[e._v("前端，对应 "),t("code",[e._v("views/bpm/processListener/index.vue")]),e._v(" 提供界面")]),e._v(" "),t("li",[e._v("后端，对应 "),t("code",[e._v("BpmProcessListenerController")]),e._v(" 提供接口")])]),e._v(" "),t("h3",{attrs:{id:"_3-1-使用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-使用场景"}},[e._v("#")]),e._v(" 3.1 使用场景")]),e._v(" "),t("p",[e._v("当我们在 BPMN 流程图中，配置监听器时，可以选择模版，而不需要每次都填写监听器信息。如下图所示：")]),e._v(" "),t("p",[t("img",{attrs:{src:"/img/%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%89%8B%E5%86%8C/%E7%9B%91%E5%90%AC%E5%99%A8/%E9%80%89%E6%8B%A9%E7%9B%91%E5%90%AC%E5%99%A8.png",alt:"选择监听器"}})]),e._v(" "),t("h3",{attrs:{id:"_3-2-表结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-表结构"}},[e._v("#")]),e._v(" 3.2 表结构")]),e._v(" "),t("p",[e._v("流程监听器表，是我们自己定义的 "),t("code",[e._v("bpm_process_listener")]),e._v(" 表，结构如下：")]),e._v(" "),t("blockquote",[t("p",[e._v("省略 creator/create_time/updater/update_time/deleted/tenant_id 等通用字段")])]),e._v(" "),t("div",{staticClass:"language-SQL extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CREATE")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("TABLE")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v("bpm_process_listener"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("bigint")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("NOT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("NULL")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("AUTO_INCREMENT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("COMMENT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'编号'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CHARACTER")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("SET")]),e._v(" utf8mb4 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("COLLATE")]),e._v(" utf8mb4_unicode_ci "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("NOT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("NULL")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("DEFAULT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("''")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("COMMENT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'监听器名字'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  \n  "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v("type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("COLLATE")]),e._v(" utf8mb4_unicode_ci "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("NOT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("NULL")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("COMMENT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'监听器类型'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  \n  "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v("status"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("tinyint")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("NOT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("NULL")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("COMMENT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'监听器状态'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  \n  "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v("event"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CHARACTER")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("SET")]),e._v(" utf8mb4 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("COLLATE")]),e._v(" utf8mb4_unicode_ci "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("NOT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("NULL")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("DEFAULT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("''")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("COMMENT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'监听事件'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  \n  "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v("value_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("64")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CHARACTER")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("SET")]),e._v(" utf8mb4 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("COLLATE")]),e._v(" utf8mb4_unicode_ci "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("NOT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("NULL")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("DEFAULT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("''")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("COMMENT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'监听器值类型'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")])]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1024")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CHARACTER")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("SET")]),e._v(" utf8mb4 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("COLLATE")]),e._v(" utf8mb4_unicode_ci "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("NOT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("NULL")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("COMMENT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'监听器值'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("PRIMARY")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("KEY")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token identifier"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")]),e._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("`")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("USING")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("BTREE")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("ENGINE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("InnoDB")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("AUTO_INCREMENT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("119")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("DEFAULT")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CHARSET")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("utf8mb4 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("COLLATE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("utf8mb4_unicode_ci "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("COMMENT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'BPM 流程监听器表'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),t("p",[e._v("① "),t("code",[e._v("type")]),e._v(" 字段，表示监听器类型，可以是 "),t("code",[e._v("execution")]),e._v(" 执行监听器、"),t("code",[e._v("task")]),e._v(" 任务监听器。")]),e._v(" "),t("p",[e._v("② "),t("code",[e._v("event")]),e._v(" 字段，表示监听事件，可以是执行监听器的 "),t("code",[e._v("start")]),e._v(" 开始、"),t("code",[e._v("end")]),e._v(" 结束，或者任务监听器的 "),t("code",[e._v("create")]),e._v(" 创建、"),t("code",[e._v("assignment")]),e._v(" 指派、"),t("code",[e._v("complete")]),e._v(" 完成、"),t("code",[e._v("delete")]),e._v(" 删除、"),t("code",[e._v("update")]),e._v(" 更新、"),t("code",[e._v("timeout")]),e._v(" 超时。")]),e._v(" "),t("p",[e._v("③ "),t("code",[e._v("value_type")]),e._v(" 字段，表示监听器值类型，可以是 "),t("code",[e._v("class")]),e._v(" Java 类、"),t("code",[e._v("expression")]),e._v(" 表达式、"),t("code",[e._v("delegateExpression")]),e._v(" 委托表达式。")]),e._v(" "),t("p",[t("code",[e._v("value")]),e._v(" 字段，表示监听器值，可以是 Java 类的全路径、表达式、委托表达式。")])])}),[],!1,null,null,null);t.default=r.exports}}]);