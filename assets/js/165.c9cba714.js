(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{494:function(t,a,e){"use strict";e.r(a);var s=e(7),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("项目基于 Spring AI 提供的 "),a("a",{attrs:{href:"https://github.com/spring-projects/spring-ai/tree/main/models/spring-ai-stability-ai",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("spring-ai-stability-ai")]),a("OutboundLink")],1),t._v("，实现 Stable Diffusion 的接入，提供 AI 作图的功能。")]),t._v(" "),a("p",[t._v("对应的 Spring AI 客户端为 "),a("a",{attrs:{href:"https://docs.spring.io/spring-ai/reference/api/image/stabilityai-image.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("StabilityAiImageClient"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"_1-申请密钥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-申请密钥"}},[t._v("#")]),t._v(" 1. 申请密钥")]),t._v(" "),a("p",[t._v("由于 "),a("a",{attrs:{href:"https://github.com/CompVis/stable-diffusion",target:"_blank",rel:"noopener noreferrer"}},[t._v("Stable Diffusion"),a("OutboundLink")],1),t._v(" 是开源模型，所以可以私有化部署。")]),t._v(" "),a("p",[t._v("而它的开源它的公司 Stability AI，提供了对应的云服务，可以直接使用。")]),t._v(" "),a("p",[t._v("下面，我们来看看这两种方式怎么申请（部署）？")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("友情提示：一般情况下，如果是为了体验 AI 作图，建议直接采用“方式一：申请 Stability 密钥”，更加简单方便！")])]),t._v(" "),a("h3",{attrs:{id:"_1-1-方式一-申请-stability-密钥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-方式一-申请-stability-密钥"}},[t._v("#")]),t._v(" 1.1 方式一：申请 Stability 密钥")]),t._v(" "),a("p",[t._v("① 访问 "),a("a",{attrs:{href:"https://stability.ai/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Stability AI"),a("OutboundLink")],1),t._v("，注册账号。")]),t._v(" "),a("p",[t._v("② 访问 "),a("a",{attrs:{href:"https://platform.stability.ai/account/keys",target:"_blank",rel:"noopener noreferrer"}},[t._v("API Keys"),a("OutboundLink")],1),t._v(" ，获得一个 API Key。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/AI%E6%89%8B%E5%86%8C/%E6%A8%A1%E5%9E%8B%E6%8E%A5%E5%85%A5/Stability-%E5%88%9B%E5%BB%BA%E5%AF%86%E9%92%A5.png",alt:"创建密钥"}})]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("申请完成后，可以在我们系统的 [AI 大模型 -> 控制台 -> API 密钥] 菜单，进行密钥的配置。只需要填写“密钥”，不需要填写“自定义 API URL”（因为 Spring AI 默认官方地址）。如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/AI%E6%89%8B%E5%86%8C/%E6%A8%A1%E5%9E%8B%E6%8E%A5%E5%85%A5/Stable-Diffusion-%E5%AE%98%E6%96%B9.png",alt:"官方的密钥配置"}})]),t._v(" "),a("p",[t._v("ps：默认官方赠送了 25 Credits，够生成几百张图。如果用完的情况下，要么再申请一个账号，要么参考 "),a("a",{attrs:{href:"https://juejin.cn/post/7361762150010945570",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Stable Diffusion 3 会员 API 充值教学》"),a("OutboundLink")],1),t._v(" 充值。")]),t._v(" "),a("h3",{attrs:{id:"_1-2-方式二-私有化部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-方式二-私有化部署"}},[t._v("#")]),t._v(" 1.2 方式二：私有化部署")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("友情提示：虽然 Stable Diffusion 可以私有化部署，但是 Spring AI 没兼容私有化部署后的 HTTP API！")]),t._v(" "),a("p",[t._v("这样就导致，即使私有化部署，项目还是无法对接使用！等后续我们看看，怎么可以兼容一下！！！")])]),t._v(" "),a("p",[t._v("① 方式一：参考 "),a("a",{attrs:{href:"https://github.com/AbdBarho/stable-diffusion-webui-docker/wiki/Setup",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/AbdBarho/stable-diffusion-webui-docker/wiki/Setup"),a("OutboundLink")],1),t._v(" 文档，使用 Docker 部署。不过要注意，如果你是 MacOS + 苹果芯片，不支持！")]),t._v(" "),a("p",[t._v("② 方式二：参考 "),a("a",{attrs:{href:"https://devwl.com/posts/stable-diffusion-webui/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://devwl.com/posts/stable-diffusion-webui/"),a("OutboundLink")],1),t._v(" 文档，直接本机部署。我是 MacOS + 苹果芯片，已经跑通！如果你要开启 API 功能，启动命令得是")]),t._v(" "),a("div",{staticClass:"language-Bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("./webui.sh "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--api")]),t._v("\n")])])]),a("p",[t._v("这样，你在 "),a("a",{attrs:{href:"http://127.0.0.1:7860/docs",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://127.0.0.1:7860/docs"),a("OutboundLink")],1),t._v(" 地址，就可以看到 "),a("code",[t._v("/sdapi/v1/txt2img")]),t._v(" 文字生成图片 API。不过正如我前面所说的，Spring AI 没兼容该接口！！！")]),t._v(" "),a("p",[t._v("③ 方式三：参考 "),a("a",{attrs:{href:"https://www.cnblogs.com/Serverless/p/18101931",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.cnblogs.com/Serverless/p/18101931"),a("OutboundLink")],1),t._v(" 文档，使用 Serverless 部署。不过我没试过，只是提供个资料哈~")]),t._v(" "),a("h2",{attrs:{id:"_2-ai-绘图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-ai-绘图"}},[t._v("#")]),t._v(" 2. AI 绘图")]),t._v(" "),a("p",[t._v("使用 "),a("RouterLink",{attrs:{to:"/ai/image/"}},[t._v("《AI 绘图》")]),t._v(" 时，需要在 [AI 大模型 -> 控制台 -> 模型配置] 菜单，配置对应的图像模型。")],1),t._v(" "),a("p",[t._v("模型有："),a("code",[t._v("stable-diffusion-v1-6")]),t._v(" 等等。")]),t._v(" "),a("h2",{attrs:{id:"_3-如何使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何使用"}},[t._v("#")]),t._v(" 3. 如何使用？")]),t._v(" "),a("p",[t._v("① 如果你的项目里需要直接通过 "),a("code",[t._v("@Resource")]),t._v(" 注入 OpenAiImageClient 等对象，需要把 "),a("code",[t._v("application.yaml")]),t._v(" 配置文件里的 "),a("code",[t._v("spring.ai.stabilityai")]),t._v(" 配置项，替换成你的！")]),t._v(" "),a("div",{staticClass:"language-YAML extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ai")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stabilityai")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("api-key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("e53UqbboF8QJCscYvzJscJxJXoFcFg4iJjl1oqgE7baJETmx "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 你的密钥")]),t._v("\n")])])]),a("p",[t._v("② 如果你希望使用 [AI 大模型 -> 控制台 -> API 密钥] 菜单的密钥配置，则可以通过 AiModelService 的 "),a("code",[t._v("#getImageModel(...)")]),t._v(" 方法，获取对应的模型对象。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("① 和 ② 这两者的后续使用，就是标准的 Spring AI 客户端的使用，调用对应的方法即可。")]),t._v(" "),a("p",[t._v("另外，StabilityAiImageModelTests 里有对应的测试用例，可以参考。")])])}),[],!1,null,null,null);a.default=r.exports}}]);