(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{479:function(t,a,e){"use strict";e.r(a);var r=e(7),s=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("项目基于 Spring AI 提供的 "),a("a",{attrs:{href:"https://github.com/spring-projects/spring-ai/tree/main/models/spring-ai-openai",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("spring-ai-openai")]),a("OutboundLink")],1),t._v("，实现 OpenAI 的接入：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("功能")]),t._v(" "),a("th",[t._v("模型")]),t._v(" "),a("th",[t._v("Spring AI 客户端")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("AI 对话")]),t._v(" "),a("td",[t._v("gpt3.5、gpt4.0 等")]),t._v(" "),a("td",[a("a",{attrs:{href:"https://docs.spring.io/spring-ai/reference/api/chat/openai-chat.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenAIChatModel"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v("AI 绘画")]),t._v(" "),a("td",[a("a",{attrs:{href:"https://en.wikipedia.org/wiki/DALL-E",target:"_blank",rel:"noopener noreferrer"}},[t._v("DALL"),a("OutboundLink")],1)]),t._v(" "),a("td",[a("a",{attrs:{href:"https://docs.spring.io/spring-ai/reference/api/image/openai-image.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenAIImageModel"),a("OutboundLink")],1)])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("友情提示：")]),t._v(" "),a("p",[t._v("如果你使用的是微软 Azure 提供的 OpenAI 服务，可阅读 "),a("RouterLink",{attrs:{to:"/ai/azure-openai/"}},[t._v("《【模型接入】微软 OpenAI》")]),t._v(" 文档。")],1)]),t._v(" "),a("h2",{attrs:{id:"_1-申请密钥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-申请密钥"}},[t._v("#")]),t._v(" 1. 申请密钥")]),t._v(" "),a("p",[t._v("由于 OpenAI 是非开源的模型，所以无法私有化部署，需要去官网申请 API Key，然后通过 Spring AI 提供的客户端接入。")]),t._v(" "),a("p",[t._v("不过，目前市面上有很多 OpenAI 的中转 API 服务，通过购买这些服务，也能实现接入。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("疑问：什么是“中转 API 服务”？")]),t._v(" "),a("p",[t._v("简单来说，就是有人通过一定的渠道，获取了大量的 OpenAI、MidJourney 等 API 账号，然后部署一个 API 池子（服务）。")]),t._v(" "),a("p",[t._v("中转人卖给你一个 API KEY 令牌，你就可以把 AI 请求发送到他的池子：池子采取一定的算法选取一个 API 账号帮你把请求发送到大模型后端，然后再把大模型返回的结果转发给你。")])]),t._v(" "),a("p",[t._v("下面，我们来看看这两种方式怎么申请？")]),t._v(" "),a("h3",{attrs:{id:"_1-1-方式一-官方-api-申请"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-方式一-官方-api-申请"}},[t._v("#")]),t._v(" 1.1 方式一：官方 API 申请")]),t._v(" "),a("p",[t._v("可以参考 "),a("a",{attrs:{href:"https://www.cnblogs.com/klchang/p/17352911.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《OpenAI API keys 的申请和测试小结 》"),a("OutboundLink")],1),t._v(" 进行申请。")]),t._v(" "),a("p",[t._v("会略微麻烦一些，我自己是直接采用了“方式二：中转 API 申请”。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("申请完成后，可以在我们系统的 [AI 大模型 -> 控制台 -> API 密钥] 菜单，进行密钥的配置。只需要填写“密钥”，不需要填写“自定义 API URL”（因为 Spring AI 默认官方地址）。如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/AI%E6%89%8B%E5%86%8C/%E6%A8%A1%E5%9E%8B%E6%8E%A5%E5%85%A5/OpenAI-%E5%AE%98%E6%96%B9.png",alt:"官方的密钥配置"}})]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("友情提示：官方的 API 禁止国内直接访问，需要有 VPN 代理~")])]),t._v(" "),a("h3",{attrs:{id:"_1-2-方式二-中转-api-申请"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-方式二-中转-api-申请"}},[t._v("#")]),t._v(" 1.2 方式二：中转 API 申请")]),t._v(" "),a("p",[t._v("提供中转 API 服务的有很多，也可以 Google 直接搜索“openai API 中转”，例如说：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://api.holdai.top/register?aff=EcRu",target:"_blank",rel:"noopener noreferrer"}},[t._v("毫秒 API"),a("OutboundLink")],1),t._v(" 【临时体验，可少量充值体验】")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://wildcard.com.cn/api",target:"_blank",rel:"noopener noreferrer"}},[t._v("Wildcard 的 API 随心用"),a("OutboundLink")],1),t._v("  【生产使用】")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("友情提示：少量购买，可以使用体验即可！")])]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("购买完成后，可以在我们系统的 [AI 大模型 -> 控制台 -> API 密钥] 菜单，进行密钥的配置。需要填写“密钥” + “自定义 API URL”（因为让 Spring AI 使用该地址）。如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/AI%E6%89%8B%E5%86%8C/%E6%A8%A1%E5%9E%8B%E6%8E%A5%E5%85%A5/OpenAI-%E4%B8%AD%E8%BD%AC.png",alt:"中转的密钥配置"}})]),t._v(" "),a("h2",{attrs:{id:"_2-模型配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-模型配置"}},[t._v("#")]),t._v(" 2. 模型配置")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("友情提示：")]),t._v(" "),a("p",[t._v("目前 "),a("code",[t._v("ai_model")]),t._v(" 表中，已经预置了一些模型，可以直接使用！！！")])]),t._v(" "),a("h3",{attrs:{id:"_2-1-ai-对话"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-ai-对话"}},[t._v("#")]),t._v(" 2.1 AI 对话")]),t._v(" "),a("p",[t._v("使用 "),a("RouterLink",{attrs:{to:"/ai/chat/"}},[t._v("《AI 对话》")]),t._v(" 时，需要在 [AI 大模型 -> 控制台 -> 模型配置] 菜单，配置对应的聊天模型。")],1),t._v(" "),a("p",[t._v("模型有："),a("code",[t._v("gpt-3.5-turbo")]),t._v("、"),a("code",[t._v("gpt-4-turbo")]),t._v(" 等等。")]),t._v(" "),a("p",[t._v("注意，每个模型标识的 "),a("code",[t._v("max_tokens")]),t._v("（回复数 Token 数）是不同的。例如说："),a("code",[t._v("gpt-3.5-turbo")]),t._v(" 是 4096，"),a("code",[t._v("gpt-4-turbo")]),t._v(" 是 8192。不确定的话，就填写 4096 先~跑通之后，再网上查查。")]),t._v(" "),a("h3",{attrs:{id:"_2-2-ai-绘图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-ai-绘图"}},[t._v("#")]),t._v(" 2.2 AI 绘图")]),t._v(" "),a("p",[t._v("使用 "),a("RouterLink",{attrs:{to:"/ai/image/"}},[t._v("《AI 绘图》")]),t._v(" 时，需要在 [AI 大模型 -> 控制台 -> 模型配置] 菜单，配置对应的图像模型。")],1),t._v(" "),a("p",[t._v("模型有："),a("code",[t._v("dall-e-3")]),t._v("、"),a("code",[t._v("dall-e-2")]),t._v(" 等等。")]),t._v(" "),a("h2",{attrs:{id:"_3-如何使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-如何使用"}},[t._v("#")]),t._v(" 3. 如何使用？")]),t._v(" "),a("p",[t._v("① 如果你的项目里需要直接通过 "),a("code",[t._v("@Resource")]),t._v(" 注入 OpenAiChatModel、OpenAiImageModel 等对象，需要把 "),a("code",[t._v("application.yaml")]),t._v(" 配置文件里的 "),a("code",[t._v("spring.ai.openai")]),t._v(" 配置项，替换成你的！")]),t._v(" "),a("div",{staticClass:"language-YAML extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ai")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("openai")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("api-key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 你的密钥")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("base-url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果是中转 API，这里填写中转 API 的地址；如果是官方的，这里不需要填写")]),t._v("\n")])])]),a("p",[t._v("② 如果你希望使用 [AI 大模型 -> 控制台 -> API 密钥] 菜单的密钥配置，则可以通过 AiModelService 的 "),a("code",[t._v("#getChatModel(...)")]),t._v(" 或 "),a("code",[t._v("#getImageModel(...)")]),t._v(" 方法，获取对应的模型对象。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("① 和 ② 这两者的后续使用，就是标准的 Spring AI 客户端的使用，调用对应的方法即可。")]),t._v(" "),a("p",[t._v("另外，OpenAIChatModelTests 和 OpenAiImageModelTests 里有对应的测试用例，可以参考。")])])}),[],!1,null,null,null);a.default=s.exports}}]);