(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{372:function(t,a,s){"use strict";s.r(a);var e=s(7),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mybatis/",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("yudao-spring-boot-starter-mybatis")]),a("OutboundLink")],1),t._v(" 技术组件，基于 MyBatis Plus 实现数据库的操作。如果你没有学习过 MyBatis Plus，建议先阅读 "),a("a",{attrs:{href:"https://www.iocoder.cn/Spring-Boot/MyBatis/?yudao",target:"_blank",rel:"noopener noreferrer"}},[t._v("《芋道 Spring Boot MyBatis 入门 》"),a("OutboundLink")],1),t._v(" 文章。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("友情提示")]),t._v(" "),a("p",[t._v("MyBatis 是最容易读懂的 Java 框架之一，感兴趣的话，可以看看艿艿写的 "),a("a",{attrs:{href:"https://www.iocoder.cn/MyBatis/good-collection/?yudao",target:"_blank",rel:"noopener noreferrer"}},[t._v("《芋道 MyBatis 源码解析》"),a("OutboundLink")],1),t._v(" 系列，已经有 18000 人学习过！")])]),t._v(" "),a("h2",{attrs:{id:"_1-实体类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-实体类"}},[t._v("#")]),t._v(" 1. 实体类")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/dataobject/BaseDO.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("BaseDO"),a("OutboundLink")],1),t._v(" 是所有数据库实体的"),a("strong",[t._v("父类")]),t._v("，代码如下：")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Data")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("abstract")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseDO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Serializable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 创建时间\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@TableField")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fill "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FieldFill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INSERT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),t._v(" createTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 最后更新时间\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@TableField")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fill "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FieldFill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INSERT_UPDATE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),t._v(" updateTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 创建者，目前使用 AdminUserDO / MemberUserDO 的 id 编号\n     *\n     * 使用 String 类型的原因是，未来可能会存在非数值的情况，留好拓展性。\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@TableField")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fill "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FieldFill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INSERT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" creator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 更新者，目前使用 AdminUserDO / MemberUserDO 的 id 编号\n     *\n     * 使用 String 类型的原因是，未来可能会存在非数值的情况，留好拓展性。\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@TableField")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fill "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FieldFill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INSERT_UPDATE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" updater"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 是否删除\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@TableLogic")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),t._v(" deleted"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("code",[t._v("createTime")]),t._v(" + "),a("code",[t._v("creator")]),t._v(" 字段，创建人相关信息。")]),t._v(" "),a("li",[a("code",[t._v("updater")]),t._v(" + "),a("code",[t._v("updateTime")]),t._v(" 字段，创建人相关信息。")]),t._v(" "),a("li",[a("code",[t._v("deleted")]),t._v(" 字段，逻辑删除。")])]),t._v(" "),a("p",[t._v("对应的 SQL 字段如下：")]),t._v(" "),a("div",{staticClass:"language-SQL extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("creator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARACTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" utf8mb4 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COLLATE")]),t._v(" utf8mb4_unicode_ci "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'创建者'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("create_time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("datetime")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CURRENT_TIMESTAMP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'创建时间'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("updater"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CHARACTER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" utf8mb4 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COLLATE")]),t._v(" utf8mb4_unicode_ci "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'更新者'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("update_time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("datetime")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CURRENT_TIMESTAMP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CURRENT_TIMESTAMP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'更新时间'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("deleted"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'是否删除'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("h3",{attrs:{id:"_1-1-主键编号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-主键编号"}},[t._v("#")]),t._v(" 1.1 主键编号")]),t._v(" "),a("p",[a("code",[t._v("id")]),t._v(" 主键编号，推荐使用 Long 型自增，原因是：")]),t._v(" "),a("ul",[a("li",[t._v("自增，保证数据库是按顺序写入，性能更加优秀。")]),t._v(" "),a("li",[t._v("Long 型，避免未来业务增长，超过 Int 范围。")])]),t._v(" "),a("p",[t._v("对应的 SQL 字段如下：")]),t._v(" "),a("div",{staticClass:"language-SQL extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bigint")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMENT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'编号'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[t._v("项目的 "),a("code",[t._v("id")]),t._v(" "),a("strong",[t._v("默认")]),t._v("采用数据库自增的策略，如果希望使用 Snowflake 雪花算法，可以修改 "),a("code",[t._v("application.yaml")]),t._v(" 配置文件，将配置项 "),a("code",[t._v("mybatis-plus.global-config.db-config.id-type")]),t._v(" 修改为 "),a("code",[t._v("ASSIGN_ID")]),t._v("。如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/01.png",alt:"配置 Snowflake 雪花算法"}})]),t._v(" "),a("h3",{attrs:{id:"_1-2-逻辑删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-逻辑删除"}},[t._v("#")]),t._v(" 1.2 逻辑删除")]),t._v(" "),a("p",[t._v("所有表通过 "),a("code",[t._v("deleted")]),t._v(" 字段来实现逻辑删除，值为 0 表示未删除，值为 1 表示已删除，可见 "),a("code",[t._v("application.yaml")]),t._v(" 配置文件的 "),a("code",[t._v("logic-delete-value")]),t._v(" 和 "),a("code",[t._v("logic-not-delete-value")]),t._v(" 配置项。如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/03.png",alt:"逻辑删除的配置"}})]),t._v(" "),a("p",[t._v("① 所有 SELECT 查询，都会自动拼接 "),a("code",[t._v("WHERE deleted = 0")]),t._v(" 查询条件，过滤已经删除的记录。如果被删除的记录，只能通过在 XML 或者 "),a("code",[t._v("@SELECT")]),t._v(" 来手写 SQL 语句。例如说：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/04.png",alt:"不自动过滤逻辑删除"}})]),t._v(" "),a("p",[t._v("② 建立唯一索引时，需要额外增加 "),a("code",[t._v("delete_time")]),t._v(" 字段，添加到唯一索引字段中，避免唯一索引冲突。例如说，"),a("code",[t._v("system_users")]),t._v(" 使用 "),a("code",[t._v("username")]),t._v(" 作为唯一索引：")]),t._v(" "),a("ul",[a("li",[t._v("未添加前：先逻辑删除了一条 "),a("code",[t._v("username = yudao")]),t._v(" 的记录，然后又插入了一条 "),a("code",[t._v("username = yudao")]),t._v(" 的记录时，会报索引冲突的异常。")]),t._v(" "),a("li",[t._v("已添加后：先逻辑删除了一条 "),a("code",[t._v("username = yudao")]),t._v(" 的记录并更新 "),a("code",[t._v("delete_time")]),t._v(" 为当前时间，然后又插入一条 "),a("code",[t._v("username = yudao")]),t._v(" 并且 "),a("code",[t._v("delete_time")]),t._v(" 为 0 的记录，不会导致唯一索引冲突。")])]),t._v(" "),a("h3",{attrs:{id:"_1-3-自动填充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-自动填充"}},[t._v("#")]),t._v(" 1.3 自动填充")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/handler/DefaultDBFieldHandler.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DefaultDBFieldHandler"),a("OutboundLink")],1),t._v(" 基于 MyBatis 自动填充机制，实现 BaseDO 通用字段的自动设置。代码如下如：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/02.png",alt:"DefaultDBFieldHandler 自动填充"}})]),t._v(" "),a("h3",{attrs:{id:"_1-4-复杂-字段类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-复杂-字段类型"}},[t._v("#")]),t._v(" 1.4 “复杂”字段类型")]),t._v(" "),a("p",[t._v("MyBatis Plus 提供 TypeHandler 字段类型处理器，用于 JavaType 与 JdbcType 之间的转换。示例如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/13.png",alt:"字段处理器的示例"}})]),t._v(" "),a("p",[t._v("常用的字段类型处理器有：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/baomidou/mybatis-plus/blob/a3e121c27cd26cb7c546dfb88190f3b1f574dc38/mybatis-plus-extension/src/main/java/com/baomidou/mybatisplus/extension/handlers/JacksonTypeHandler.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("JacksonTypeHandler"),a("OutboundLink")],1),t._v("：通用的 Jackson 实现 JSON 字段类型处理器。")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/type/JsonLongSetTypeHandler.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("JsonLongSetTypeHandler"),a("OutboundLink")],1),t._v("：针对 "),a("code",[t._v("Set<Long>")]),t._v(" 的 Jackson 实现 JSON 字段类型处理器。")])]),t._v(" "),a("p",[t._v("另外，如果你后续要拓展自定义的 TypeHandler 实现，可以添加到 "),a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/type/JsonLongSetTypeHandler.java",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("cn.iocoder.yudao.framework.mybatis.core.type")]),a("OutboundLink")],1),t._v(" 包下。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("注意事项：")]),t._v(" "),a("p",[t._v("使用 TypeHandler 时，需要设置实体的 "),a("code",[t._v("@TableName")]),t._v(" 注解的 "),a("code",[t._v("@autoResultMap = true")]),t._v("。")])]),t._v(" "),a("h2",{attrs:{id:"_2-编码规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-编码规范"}},[t._v("#")]),t._v(" 2. 编码规范")]),t._v(" "),a("p",[t._v("① 数据库实体类放在 "),a("code",[t._v("dal.dataobject")]),t._v(" 包下，以 DO 结尾；数据库访问类放在 "),a("code",[t._v("dal.mysql")]),t._v(" 包下，以 Mapper 结尾。如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/17.png",alt:"包规范"}})]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("② 数据库实体类的注释要完整，特别是哪些字段是关联（外键）、枚举、冗余等等。例如说：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/18.png",alt:"包规范"}})]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("③ 禁止在 Controller、Service 中，"),a("strong",[t._v("直接")]),t._v("进行 MyBatis Plus 操作。原因是：大量 MyBatis 操作散落在 Service 中，会导致 Service 的代码越来乱，无法聚焦业务逻辑。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th"),t._v(" "),a("th",[t._v("示例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("错误")]),t._v(" "),a("td",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/05.png",alt:""}})])]),t._v(" "),a("tr",[a("td",[t._v("正确")]),t._v(" "),a("td",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/06.png",alt:""}})])])])]),t._v(" "),a("p",[t._v("并且，通过只允许将 MyBatis Plus 操作编写 Mapper 层，更好的实现 SELECT 查询的复用，而不是 Service 会存在很多相同且重复的 SELECT 查询的逻辑。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("④ Mapper 的 SELECT 查询方法的命名，采用 Spring Data 的 "),a("a",{attrs:{href:"https://docs.spring.io/spring-data/jpa/docs/2.2.0.RELEASE/reference/html/#jpa.query-methods.query-creation",target:"_blank",rel:"noopener noreferrer"}},[t._v('"Query methods"'),a("OutboundLink")],1),t._v(" 策略，方法名使用 "),a("code",[t._v("selectBy查询条件")]),t._v(" 规则。例如说：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/07.png",alt:"SELECT 命名示例"}})]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("⑤ 优先使用 LambdaQueryWrapper 条件构造器，使用方法获得字段名，避免手写 "),a("code",[t._v('"字段"')]),t._v(" 可能写错的情况。例如说：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/08.png",alt:"LambdaQueryWrapper 条件构造器"}})]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("⑥ 简单的单表查询，优先在 Mapper 中通过 "),a("code",[t._v("default")]),t._v(" 方法实现。例如说：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/11.png",alt:"单表查询"}})]),t._v(" "),a("h2",{attrs:{id:"_3-crud-接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-crud-接口"}},[t._v("#")]),t._v(" 3. CRUD 接口")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/mapper/BaseMapperX.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("BaseMapperX"),a("OutboundLink")],1),t._v(" 接口，继承 MyBatis Plus 的 BaseMapper 接口，提供更强的 CRUD 操作能力。")]),t._v(" "),a("h3",{attrs:{id:"_3-1-selectone"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-selectone"}},[t._v("#")]),t._v(" 3.1 selectOne")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/mapper/BaseMapperX.java#L30-L44",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("#selectOne(...)")]),a("OutboundLink")],1),t._v(" 方法，使用指定条件，查询单条记录。示例如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/09.png",alt:"selectOne 示例"}})]),t._v(" "),a("h3",{attrs:{id:"_3-2-selectcount"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-selectcount"}},[t._v("#")]),t._v(" 3.2 selectCount")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/mapper/BaseMapperX.java#L46-L56",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("#selectCount(...)")]),a("OutboundLink")],1),t._v(" 方法，使用指定条件，查询记录的数量。示例如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/10.png",alt:"selectCount 示例"}})]),t._v(" "),a("h3",{attrs:{id:"_3-3-selectlist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-selectlist"}},[t._v("#")]),t._v(" 3.3 selectList")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/mapper/BaseMapperX.java#L58-L76",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("#selectList(...)")]),a("OutboundLink")],1),t._v(" 方法，使用指定条件，查询多条记录。示例如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/11.png",alt:"selectList 示例"}})]),t._v(" "),a("h3",{attrs:{id:"_3-4-selectpage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-selectpage"}},[t._v("#")]),t._v(" 3.4 selectPage")]),t._v(" "),a("p",[t._v("针对 MyBatis Plus 分页查询的二次分装，在 "),a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/mapper/BaseMapperX.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("BaseMapperX"),a("OutboundLink")],1),t._v(" 中实现，目的是使用项目自己的分页封装：")]),t._v(" "),a("ul",[a("li",[t._v("【入参】查询前，将项目的分页参数 "),a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/pojo/PageParam.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("PageParam"),a("OutboundLink")],1),t._v("，转换成 MyBatis Plus 的 IPage 对象。")]),t._v(" "),a("li",[t._v("【出参】查询后，将 MyBatis Plus 的分页结果 IPage，转换成项目的分页结果 "),a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/pojo/PageResult.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("PageResult"),a("OutboundLink")],1),t._v("。代码如下图：")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E5%88%86%E9%A1%B5%E5%AE%9E%E7%8E%B0/01.png",alt:"BaseMapperX 实现"}})]),t._v(" "),a("p",[t._v("具体的使用示例，可见 "),a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/dal/mysql/tenant/TenantMapper.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("TenantMapper"),a("OutboundLink")],1),t._v(" 类中，定义 selectPage 查询方法。代码如下：")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Mapper")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TenantMapper")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseMapperX")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TenantDO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PageResult")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TenantDO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectPage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TenantPageReqVO")]),t._v(" reqVO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectPage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reqVO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LambdaQueryWrapperX")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TenantDO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("likeIfPresent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TenantDO")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reqVO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果 name 不为空，则进行 like 查询")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("likeIfPresent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TenantDO")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContactName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reqVO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContactName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("likeIfPresent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TenantDO")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContactMobile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reqVO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContactMobile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("eqIfPresent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TenantDO")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getStatus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reqVO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getStatus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果 status 不为空，则进行 = 查询")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("betweenIfPresent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TenantDO")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCreateTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reqVO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBeginCreateTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reqVO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEndCreateTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果 create 不为空，则进行 between 查询")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("orderByDesc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TenantDO")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 按照 id 倒序")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("完整实战，可见 "),a("a",{attrs:{href:"/page-feature"}},[t._v("《开发指南 —— 分页实现》")]),t._v(" 文档。")]),t._v(" "),a("h3",{attrs:{id:"_3-5-insertbatch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-insertbatch"}},[t._v("#")]),t._v(" 3.5 insertBatch")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/mapper/BaseMapperX.java#L78-L88",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("#insertBatch(...)")]),a("OutboundLink")],1),t._v(" 方法，遍历数组，逐条插入数据库中，适合"),a("strong",[t._v("少量")]),t._v("数据插入，或者对"),a("strong",[t._v("性能要求不高")]),t._v("的场景。 示例如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/12.png",alt:"insertBatch 示例"}})]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("为什么不使用 insertBatchSomeColumn 批量插入？")]),t._v(" "),a("ul",[a("li",[t._v("只支持 MySQL 数据库。其它 Oracle 等数据库使用会报错，可见 "),a("a",{attrs:{href:"https://github.com/baomidou/mybatis-plus/blob/a3e121c27cd26cb7c546dfb88190f3b1f574dc38/mybatis-plus-extension/src/main/java/com/baomidou/mybatisplus/extension/injector/methods/InsertBatchSomeColumn.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("InsertBatchSomeColumn"),a("OutboundLink")],1),t._v(" 说明。")]),t._v(" "),a("li",[t._v("未支持多租户。插入数据库时，多租户字段不会进行自动赋值。")])])]),t._v(" "),a("h2",{attrs:{id:"_4-批量插入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-批量插入"}},[t._v("#")]),t._v(" 4. 批量插入")]),t._v(" "),a("p",[t._v("绝大多数场景下，推荐使用 MyBatis Plus 提供的 IService 的 "),a("a",{attrs:{href:"https://github.com/baomidou/mybatis-plus/blob/34ebdf6ee6/mybatis-plus-extension/src/main/java/com/baomidou/mybatisplus/extension/service/IService.java#L66-L74",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("#saveBatch()")]),a("OutboundLink")],1),t._v(" 方法。示例 "),a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-system/yudao-module-system-biz/src/main/java/cn/iocoder/yudao/module/system/service/permission/PermissionServiceImpl.java#L200-L230",target:"_blank",rel:"noopener noreferrer"}},[t._v("PermissionServiceImpl"),a("OutboundLink")],1),t._v(" 如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/14.png",alt:"saveBatch 示例"}})]),t._v(" "),a("h2",{attrs:{id:"_5-条件构造器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-条件构造器"}},[t._v("#")]),t._v(" 5. 条件构造器")]),t._v(" "),a("p",[t._v("继承 MyBatis Plus 的条件构造器，拓展了 "),a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/query/LambdaQueryWrapperX.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("LambdaQueryWrapperX"),a("OutboundLink")],1),t._v(" 和 "),a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/query/QueryWrapperX.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("QueryWrapperX"),a("OutboundLink")],1),t._v(" 类，主要是增加 xxxIfPresent 方法，用于判断值不存在的时候，不要拼接到条件中。例如说：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/15.png",alt:"xxxIfPresent 方法"}})]),t._v(" "),a("p",[t._v("具体的使用示例如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/16.png",alt:"LambdaQueryWrapperX 使用示例"}})]),t._v(" "),a("h2",{attrs:{id:"_6-mapper-xml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-mapper-xml"}},[t._v("#")]),t._v(" 6. Mapper XML")]),t._v(" "),a("p",[t._v("默认配置下，MyBatis Mapper XML 需要写在各 "),a("code",[t._v("yudao-module-xxx-biz")]),t._v(" 模块的 "),a("code",[t._v("resources/mapper")]),t._v(" 目录下。示例 "),a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-infra/yudao-module-infra-biz/src/main/resources/mapper/test/TestDemoMapper.xml",target:"_blank",rel:"noopener noreferrer"}},[t._v("TestDemoMapper.xml"),a("OutboundLink")],1),t._v(" 如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/19.png",alt:"TestDemoMapper.xml 示例"}})]),t._v(" "),a("p",[t._v("尽量避免数据库的连表（多表）查询，而是采用多次查询，Java 内存拼接的方式替代。例如说：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E6%95%B0%E6%8D%AE%E5%BA%93MyBatis/20.png",alt:"UserController 示例"}})]),t._v(" "),a("h2",{attrs:{id:"_7-字段加密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-字段加密"}},[t._v("#")]),t._v(" 7. 字段加密")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-mybatis/src/main/java/cn/iocoder/yudao/framework/mybatis/core/type/EncryptTypeHandler.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("EncryptTypeHandler"),a("OutboundLink")],1),t._v("，基于 "),a("a",{attrs:{href:"https://apidoc.gitee.com/dromara/hutool/cn/hutool/crypto/symmetric/AES.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hutool AES"),a("OutboundLink")],1),t._v(" 实现字段的解密与解密。")]),t._v(" "),a("p",[t._v("例如说，"),a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/dal/dataobject/db/DataSourceConfigDO.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据源配置"),a("OutboundLink")],1),t._v("的 "),a("code",[t._v("password")]),t._v(" 密码需要实现加密存储，则只需要在该字段上添加 EncryptTypeHandler 处理器。示例代码如下：")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@TableName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"infra_data_source_config"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" autoResultMap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ① 添加 autoResultMap = true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSourceConfigDO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseDO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... 省略其它字段")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 密码\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@TableField")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("typeHandler "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EncryptTypeHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ② 添加 EncryptTypeHandler 处理器")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("另外，在 "),a("code",[t._v("application.yaml")]),t._v(" 配置文件中，可使用 "),a("code",[t._v("mybatis-plus.encryptor.password")]),t._v(" 设置加密密钥。")]),t._v(" "),a("p",[t._v("字段加密后，只允许使用"),a("strong",[t._v("精准")]),t._v("匹配，无法使用模糊匹配。示例代码如下：")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 测试使用 password 查询，可以查询到数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testSelectPassword")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mock 数据")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSourceConfigDO")]),t._v(" dbDataSourceConfig "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("randomPojo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSourceConfigDO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    dataSourceConfigMapper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dbDataSourceConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @Sql: 先插入出一条存在的数据")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSourceConfigDO")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dataSourceConfigMapper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectOne")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSourceConfigDO")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPassword")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EncryptTypeHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("encrypt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dbDataSourceConfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPassword")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重点：需要使用 EncryptTypeHandler 去加密查询字段！！！")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);