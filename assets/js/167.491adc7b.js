(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{496:function(t,a,n){"use strict";n.r(a);var s=n(7),e=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Suno AI，简称 Suno，是一款生成式人工智能音乐创作程序，旨在产生人声与乐器相结合的逼真歌曲。2023 年 12 月 20 日，Suno AI 在推出网络应用程序并与微软建立合作关系后，开始广泛使用。")]),t._v(" "),a("p",[t._v("由于 Suno 没有直接提供 API 接口，所以大家一般通过 "),a("a",{attrs:{href:"https://github.com/gcui-art/suno-api",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/gcui-art/suno-api"),a("OutboundLink")],1),t._v(" 项目，模拟用户操作，实现 API 形式调用 AI 生成音乐。")]),t._v(" "),a("p",[t._v("也因此，Spring AI 肯定是不集成 Suno 的，所以我们实现的 "),a("code",[t._v("models/suno")]),t._v(" 包下的 SunoApi 类，基于上述的 "),a("code",[t._v("suno-api")]),t._v(" 代理，调用 Suno 实现音乐生成的功能。")]),t._v(" "),a("h2",{attrs:{id:"_1-申请密钥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-申请密钥"}},[t._v("#")]),t._v(" 1. 申请密钥")]),t._v(" "),a("p",[t._v("可参考 "),a("a",{attrs:{href:"https://github.com/gcui-art/suno-api/blob/main/README_CN.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/gcui-art/suno-api/blob/main/README_CN.md"),a("OutboundLink")],1),t._v(" 文档，申请 Suno 账号，并搭建 "),a("code",[t._v("suno-api")]),t._v(" 代理。")]),t._v(" "),a("p",[t._v("我是采用【本地运行】的方式，因为 Vercel 部署需要 VPN 访问，比较麻烦。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("申请完成后，可以在我们系统的 [AI 大模型 -> 控制台 -> API 密钥] 菜单，进行密钥的配置。需要填写“密钥” + “自定义 API URL”。如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/AI%E6%89%8B%E5%86%8C/%E6%A8%A1%E5%9E%8B%E6%8E%A5%E5%85%A5/Suno-%E7%A7%81%E6%9C%89.png",alt:"私有的密钥配置"}})]),t._v(" "),a("h2",{attrs:{id:"_2-如何使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何使用"}},[t._v("#")]),t._v(" 2. 如何使用？")]),t._v(" "),a("p",[t._v("① 如果你的项目里需要直接通过 "),a("code",[t._v("@Resource")]),t._v(" 注入 SunoApi 对象，需要把 "),a("code",[t._v("application.yaml")]),t._v(" 配置文件里的 "),a("code",[t._v("yudao.ai.suno")]),t._v(" 配置项，替换成你的！")]),t._v(" "),a("div",{staticClass:"language-YAML extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("yudao")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ai")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("suno")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("base-url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3001")]),t._v("\n")])])]),a("p",[t._v("另外，由于 Suno 生成音乐是异步的，可以把项目的 AiSunoSyncJob 定时器类，配置每 1 分钟执行一次，同步音乐生成的结果。怎么使用定时器，可以参考 "),a("a",{attrs:{href:"/job"}},[t._v("《定时任务》")]),t._v(" 文档。")]),t._v(" "),a("p",[t._v("② 如果你希望使用 [AI 大模型 -> 控制台 -> API 密钥] 菜单的密钥配置，则可以通过 AiModelService 的 "),a("code",[t._v("#getSunoApi()")]),t._v(" 方法，获取对应的 SunoApi 对象。")]),t._v(" "),a("p",[t._v("另外，SunoApiTests 里有对应的测试用例，可以参考。")])])}),[],!1,null,null,null);a.default=e.exports}}]);