(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{364:function(t,s,e){"use strict";e.r(s);var a=e(7),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-功能简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-功能简介"}},[t._v("#")]),t._v(" 1. 功能简介")]),t._v(" "),s("p",[t._v("项目的 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/tree/master/yudao-framework/yudao-spring-boot-starter-websocket",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("yudao-spring-boot-starter-websocket")]),s("OutboundLink")],1),t._v(" 组件，基于 "),s("a",{attrs:{href:"https://docs.spring.io/spring-framework/docs/current/reference/html/web.html#websocket",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring WebSocket"),s("OutboundLink")],1),t._v(" 进行二次封装，实现了更加简单的使用方式。例如说，WebSocket 的认证、Session 的管理、WebSocket 集群的消息广播等等。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("疑问：为什么不使用 Netty 实现 WebSocket？")]),t._v(" "),s("p",[t._v("Netty 的学习和使用门槛较高，对大家可能不够友好，而 Spring WebSocket 足够满足 99.99% 的场景。")])]),t._v(" "),s("h3",{attrs:{id:"_1-1-token-身份认证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-token-身份认证"}},[t._v("#")]),t._v(" 1.1 Token 身份认证")]),t._v(" "),s("p",[t._v("① 在 WebSocket 连接建立时，通过 QueryString 的 "),s("code",[t._v("token")]),t._v(" 参数，进行认证。例如说："),s("code",[t._v("ws://127.0.0.1:48080/ws?token=xxx")]),t._v("。")]),t._v(" "),s("p",[t._v("由于 WebSocket 是基于 HTTP 建立连接，所以它的认证可以复用项目的 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-security/src/main/java/cn/iocoder/yudao/framework/security/core/filter/TokenAuthenticationFilter.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("TokenAuthenticationFilter"),s("OutboundLink")],1),t._v(" 实现。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("为什么 token 不使用 Header 传递？")]),t._v(" "),s("p",[t._v("WebSocket 不支持 Header 传递，所以只能使用 QueryString 传递。")])]),t._v(" "),s("p",[t._v("② 认证完成后，会通过 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-websocket/src/main/java/cn/iocoder/yudao/framework/websocket/core/security/LoginUserHandshakeInterceptor.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("LoginUserHandshakeInterceptor"),s("OutboundLink")],1),t._v(" 拦截器，将用户信息存储到 WebSocket Session 的 "),s("code",[t._v("attributes")]),t._v(" 中。")]),t._v(" "),s("p",[t._v("这样，后续可以使用 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-websocket/src/main/java/cn/iocoder/yudao/framework/websocket/core/util/WebSocketFrameworkUtils.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("WebSocketFrameworkUtils"),s("OutboundLink")],1),t._v(" 获取用户信息，例如说：")]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// WebSocketFrameworkUtils.java")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ① 获取当前用户")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LoginUser")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLoginUser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebSocketSession")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ② 获得当前用户的类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLoginUserType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebSocketSession")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ③ 获得当前用户的编号")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLoginUserType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebSocketSession")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ④ 获得当前用户的租户编号")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTenantId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebSocketSession")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_1-2-session-会话管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-session-会话管理"}},[t._v("#")]),t._v(" 1.2 Session 会话管理")]),t._v(" "),s("p",[t._v("每个前端和后端建立的 WebSocket 连接，对应后端的一个 WebSocketSession 会话对象。由于后续需要对 WebSocketSession 进行消息的发送，所以需要进行管理。")]),t._v(" "),s("p",[t._v("① WebSocketSession 的管理，由 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-websocket/src/main/java/cn/iocoder/yudao/framework/websocket/core/session/WebSocketSessionManager.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("WebSocketSessionManager"),s("OutboundLink")],1),t._v(" 定义接口，由 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-websocket/src/main/java/cn/iocoder/yudao/framework/websocket/core/session/WebSocketSessionManagerImpl.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("WebSocketSessionManagerImpl"),s("OutboundLink")],1),t._v(" 具体实现。")]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 添加和移除 Session")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addSession")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebSocketSession")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeSession")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebSocketSession")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得 Session，多种维度")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebSocketSession")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSession")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Session 编号")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collection")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebSocketSession")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSessionList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" userType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用户类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Collection")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebSocketSession")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSessionList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" userType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用户编号")]),t._v("\n")])])]),s("p",[t._v("② WebSocket 建立和关闭连接时，通过 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-websocket/src/main/java/cn/iocoder/yudao/framework/websocket/core/session/WebSocketSessionHandlerDecorator.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("WebSocketSessionHandlerDecorator"),s("OutboundLink")],1),t._v(" 处理器，分别调用 WebSocketSessionManager 进行 Session 的添加和移除。")]),t._v(" "),s("h3",{attrs:{id:"_1-3-message-消息格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-message-消息格式"}},[t._v("#")]),t._v(" 1.3 Message 消息格式")]),t._v(" "),s("p",[t._v("WebSocket 默认使用“文本”进行通信，而业务需要按照不同类型的消息，进行不同的处理。因此，项目定义了 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-websocket/src/main/java/cn/iocoder/yudao/framework/websocket/core/message/JsonWebSocketMessage.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("JsonWebSocketMessage"),s("OutboundLink")],1),t._v(" 消息对象，包含 "),s("code",[t._v("type")]),t._v(" 消息类型 + "),s("code",[t._v("content")]),t._v(" 消息内容。")]),t._v(" "),s("p",[t._v("和 Spring MVC 对比，可以理解为：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th",[t._v("标识")]),t._v(" "),s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("参数")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Spring MVC")]),t._v(" "),s("td",[t._v("URL + Method 等")]),t._v(" "),s("td",[t._v("Controller 的 Method 方法")]),t._v(" "),s("td",[t._v("QueryString 或 RequestBody 等")])]),t._v(" "),s("tr",[s("td",[t._v("项目 WebSocket")]),t._v(" "),s("td",[s("code",[t._v("type")]),t._v(" 消息类型")]),t._v(" "),s("td",[s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-websocket/src/main/java/cn/iocoder/yudao/framework/websocket/core/listener/WebSocketMessageListener.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("WebSocketMessageListener"),s("OutboundLink")],1),t._v(" 实现类")]),t._v(" "),s("td",[t._v("解析 "),s("code",[t._v("content")]),t._v(" 消息内容后的 Message 对象")])])])]),t._v(" "),s("p",[t._v("具体 JsonWebSocketMessage 和 WebSocketMessageListener 详细说明，参见「1.4 Message 消息接收」小节。")]),t._v(" "),s("h3",{attrs:{id:"_1-4-message-消息接收"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-message-消息接收"}},[t._v("#")]),t._v(" 1.4 Message 消息接收")]),t._v(" "),s("p",[t._v("① WebSocket 接收到项目后，会先交给 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-websocket/src/main/java/cn/iocoder/yudao/framework/websocket/core/handler/JsonWebSocketMessageHandler.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("JsonWebSocketMessageHandler"),s("OutboundLink")],1),t._v(" 消息处理器，将消息解析成 JsonWebSocketMessage 对象。")]),t._v(" "),s("p",[t._v("之后，根据 "),s("code",[t._v("type")]),t._v(" 消息类型，获得到 WebSocketMessageListener 实现类，并将 "),s("code",[t._v("content")]),t._v(" 消息内容进一步解析成 Message 对象，交给它进行处理。")]),t._v(" "),s("p",[t._v("② 具体案例，可见 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/websocket/DemoWebSocketMessageListener.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoWebSocketMessageListener"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/websocket/message/DemoSendMessage.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoSendMessage"),s("OutboundLink")],1),t._v(" 类。")]),t._v(" "),s("h3",{attrs:{id:"_1-5-message-消息推送"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-message-消息推送"}},[t._v("#")]),t._v(" 1.5 Message 消息推送")]),t._v(" "),s("p",[t._v("① 项目的 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-websocket/src/main/java/cn/iocoder/yudao/framework/websocket/core/sender/WebSocketMessageSender.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("WebSocketMessageSender"),s("OutboundLink")],1),t._v(" 接口，定义了给 Session 发送消息的方法。如下所示：")]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// WebSocketMessageSender.java")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ① 发送消息给指定用户")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" userType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" messageType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" messageContent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" userType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" messageType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" messageContent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" messageType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JsonUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toJsonString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("messageContent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ② 发送消息给指定用户类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" userType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" messageType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" messageContent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" userType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" messageType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" messageContent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("userType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" messageType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JsonUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toJsonString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("messageContent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ③ 发送消息给指定 Session")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" sessionId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" messageType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" messageContent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" sessionId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" messageType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" messageContent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sessionId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" messageType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JsonUtils")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toJsonString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("messageContent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("② WebSocketMessageSender 有多种实现类，如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("实现类")]),t._v(" "),s("th",[t._v("是否支持 WebSocket 集群")]),t._v(" "),s("th",[t._v("前置要求")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("LocalWebSocketMessageSender")]),t._v(" "),s("td",[t._v("❌")]),t._v(" "),s("td",[t._v("无")])]),t._v(" "),s("tr",[s("td",[t._v("RedisWebSocketMessageSender")]),t._v(" "),s("td",[t._v("✅")]),t._v(" "),s("td",[t._v("开启 "),s("RouterLink",{attrs:{to:"/message-queue/redis/"}},[t._v("《消息队列（Redis）》")])],1)]),t._v(" "),s("tr",[s("td",[t._v("RocketMQWebSocketMessageSender")]),t._v(" "),s("td",[t._v("✅")]),t._v(" "),s("td",[t._v("开启 "),s("RouterLink",{attrs:{to:"/message-queue/rocketmq/"}},[t._v("《消息队列（RocketMQ）》")])],1)]),t._v(" "),s("tr",[s("td",[t._v("KafkaWebSocketMessageSender")]),t._v(" "),s("td",[t._v("✅")]),t._v(" "),s("td",[t._v("开启 "),s("RouterLink",{attrs:{to:"/message-queue/kafka/"}},[t._v("《消息队列（Kafka）》")])],1)]),t._v(" "),s("tr",[s("td",[t._v("RabbitMQWebSocketMessageSender")]),t._v(" "),s("td",[t._v("✅")]),t._v(" "),s("td",[t._v("开启 "),s("RouterLink",{attrs:{to:"/message-queue/rabbitmq/"}},[t._v("《消息队列（RabbitMQ）》")])],1)])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("疑问：什么是 WebSocket 集群？")]),t._v(" "),s("p",[t._v("在后端部署多个 Java 进程时，会形成 WebSocket 集群。此时，就会存在跨进程的消息推送问题。例如说，连接 A 进程的 WebSocket 的用户，想要发送消息给连接 B 进程的 WebSocket 用户。")]),t._v(" "),s("p",[t._v("😁 如何解决呢？消息不直接发送给用户 WebSocketSession，而是先发给 Redis、RocketMQ 等消息队列，再由每个 Java 进程监听该消息，分别判断判断该用户 WebSocket 是否连接的是自己，如果是，则进行消息推送。")])]),t._v(" "),s("p",[t._v("默认配置下，使用 LocalWebSocketMessageSender 本地发送消息，不支持 WebSocket 集群。可通过修改 "),s("code",[t._v("application.yaml")]),t._v(" 配置文件的 "),s("code",[t._v("yudao.websocket.sender-type")]),t._v(" 来切换，如下：")]),t._v(" "),s("div",{staticClass:"language-YAML extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("yudao")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("websocket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# websocket的开关")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /infra/ws "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 路径")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sender-type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 消息发送的类型，可选值为 local、redis、rocketmq、kafka、rabbitmq")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sender-rocketmq")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("topic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("spring.application.name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("websocket "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 消息发送的 RocketMQ Topic")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("consumer-group")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("spring.application.name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("websocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("consumer "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 消息发送的 RocketMQ Consumer Group")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sender-rabbitmq")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exchange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("spring.application.name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("websocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("exchange "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 消息发送的 RabbitMQ Exchange")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("queue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("spring.application.name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("websocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("queue "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 消息发送的 RabbitMQ Queue")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sender-kafka")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("topic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("spring.application.name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("websocket "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 消息发送的 Kafka Topic")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("consumer-group")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("spring.application.name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("websocket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("consumer "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 消息发送的 Kafka Consumer Group")]),t._v("\n")])])]),s("p",[t._v("另外，默认的 WebSocket 连接地址是 "),s("code",[t._v("ws://127.0.0.1:48080/infra/ws")]),t._v("，可通过 "),s("code",[t._v("yudao.websocket.path")]),t._v(" 配置项进行修改。")]),t._v(" "),s("h2",{attrs:{id:"_2-使用方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用方案"}},[t._v("#")]),t._v(" 2. 使用方案")]),t._v(" "),s("p",[t._v("目前有 2 种使用方案，分别是：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方案名")]),t._v(" "),s("th",[t._v("上行")]),t._v(" "),s("th",[t._v("下行")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("方案一：纯 WebSocket")]),t._v(" "),s("td",[t._v("WebSocket")]),t._v(" "),s("td",[t._v("WebSocket")])]),t._v(" "),s("tr",[s("td",[t._v("方案二：WebSocket + HTTP")]),t._v(" "),s("td",[t._v("HTTP")]),t._v(" "),s("td",[t._v("WebSocket")])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("疑问：什么是上行？什么是下行？")]),t._v(" "),s("ul",[s("li",[t._v("上行：指的是“前端”发送消息给“后端”，WebSocket 和 HTTP 都可以。")]),t._v(" "),s("li",[t._v("下行：指的是“后端”发送消息给“前端”，只能使用 WebSocket。")])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("友情提示：下文中提到的所有配置，项目都已经配置好。你只需要按照下文的步骤，进行调试即可，了解每个配置的作用即可。")])]),t._v(" "),s("h3",{attrs:{id:"_2-1-方案一-纯-websocket"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-方案一-纯-websocket"}},[t._v("#")]),t._v(" 2.1 方案一：纯 WebSocket")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/WebSocket/WebSocket%E6%B5%8B%E8%AF%95%E7%95%8C%E9%9D%A2.png",alt:"WebSocket 测试界面"}})]),t._v(" "),s("ul",[s("li",[t._v("前端：见 [基础设施 -> WebSocket 测试] 菜单，对应 "),s("a",{attrs:{href:"https://github.com/yudaocode/yudao-ui-admin-vue3/blob/master/src/views/infra/webSocket/index.vue",target:"_blank",rel:"noopener noreferrer"}},[t._v("/views/infra/websocket/index.vue"),s("OutboundLink")],1),t._v(" 界面")]),t._v(" "),s("li",[t._v("后端：见 "),s("code",[t._v("yudao-module-infra-biz")]),t._v(" 模块，对应 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/websocket/DemoWebSocketMessageListener.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoWebSocketMessageListener"),s("OutboundLink")],1),t._v(" 监听器")])]),t._v(" "),s("p",[t._v("基于 WebSocket 实现的单聊和群聊，暂时不支持消息的持久化（刷新后，消息会消息）。建议，多多调试，更好的理解 WebSocket 流程。")]),t._v(" "),s("h4",{attrs:{id:"_2-1-1-后端代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-后端代码"}},[t._v("#")]),t._v(" 2.1.1 后端代码")]),t._v(" "),s("p",[t._v("① 在 "),s("code",[t._v("yudao-module-infra-biz")]),t._v(" 模块的 "),s("code",[t._v("pom.xml")]),t._v(" 文件中，引入 "),s("code",[t._v("yudao-spring-boot-starter-websocket")]),t._v(" 依赖。如下所示：")]),t._v(" "),s("div",{staticClass:"language-XML extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("cn.iocoder.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("yudao-spring-boot-starter-websocket"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("② 新建 DemoWebSocketMessageListener 类，实现对应消息的处理。如下图所示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/WebSocket/DemoWebSocketMessageListener%E7%B1%BB.png",alt:"DemoWebSocketMessageListener 类"}})]),t._v(" "),s("h4",{attrs:{id:"_2-1-2-前端代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-前端代码"}},[t._v("#")]),t._v(" 2.1.2 前端代码")]),t._v(" "),s("p",[t._v("① 建立 WebSocket 连接，如下图所示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/WebSocket/WebSocket%E8%BF%9E%E6%8E%A5.png",alt:"WebSocket 连接"}})]),t._v(" "),s("p",[t._v("② 发送 WebSocket 消息，如下图所示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/WebSocket/WebSocket%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF.png",alt:"WebSocket 发送消息"}})]),t._v(" "),s("p",[t._v("③ 接收 WebSocket 消息。如下图所示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/WebSocket/WebSocket%E6%8E%A5%E6%94%B6%E6%B6%88%E6%81%AF.png",alt:"WebSocket 接收消息"}})]),t._v(" "),s("h3",{attrs:{id:"_2-2-方案二-websocket-http"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-方案二-websocket-http"}},[t._v("#")]),t._v(" 2.2 方案二：WebSocket + HTTP")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/WebSocket/%E5%85%AC%E5%91%8A%E9%80%9A%E7%9F%A5.png",alt:"公告通知"}})]),t._v(" "),s("ul",[s("li",[t._v("前端：见 [系统管理 -> 消息中心 -> 通知公告] 菜单，对应 "),s("a",{attrs:{href:"https://github.com/yudaocode/yudao-ui-admin-vue3/blob/master/src/views/system/notice/index.vue",target:"_blank",rel:"noopener noreferrer"}},[t._v("/views/system/notice/index.vue"),s("OutboundLink")],1),t._v(" 界面的【推送】按钮")]),t._v(" "),s("li",[t._v("后端：见 "),s("code",[t._v("yudao-module-system-biz")]),t._v(" 模块，对应 "),s("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-module-infra/yudao-module-infra-biz/src/main/java/cn/iocoder/yudao/module/infra/websocket/DemoWebSocketMessageListener.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DemoWebSocketMessageListener"),s("OutboundLink")],1),t._v(" 监听器")])]),t._v(" "),s("p",[t._v("点击某条公告的【推送】按钮，仅仅推送给所有在线用户。由于 WebSocket 目前暂时没全局建立，所以还是使用 [基础设施 -> WebSocket 测试] 菜单演示。如下图所示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/WebSocket/%E5%85%AC%E5%91%8A%E9%80%9A%E7%9F%A5%E7%9A%84%E6%8E%A8%E9%80%81.png",alt:"公告通知的推送"}})]),t._v(" "),s("h4",{attrs:{id:"_2-2-1-后端代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-后端代码"}},[t._v("#")]),t._v(" 2.2.1 后端代码")]),t._v(" "),s("p",[t._v("【相同】① 在 "),s("code",[t._v("yudao-module-infra-biz")]),t._v(" 模块的 "),s("code",[t._v("pom.xml")]),t._v(" 文件中，引入 "),s("code",[t._v("yudao-spring-boot-starter-websocket")]),t._v(" 依赖。")]),t._v(" "),s("p",[t._v("【不同】② 在 "),s("code",[t._v("yudao-module-system-biz")]),t._v(" 模块的 "),s("code",[t._v("pom.xml")]),t._v(" 文件中，引入 "),s("code",[t._v("yudao-module-infra-api")]),t._v(" 依赖。如下所示：")]),t._v(" "),s("div",{staticClass:"language-XML extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("cn.iocoder.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("yudao-module-infra-api"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("${revision}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("【不同】③ 在 "),s("code",[t._v("yudao-module-system-biz")]),t._v(" 模块，在 NoticeController 类中，新建 "),s("code",[t._v("#push(...)")]),t._v(" 方法，用于推送公告消息。如下图所示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/WebSocket/NoticeController%E6%8E%A8%E9%80%81.png",alt:"NoticeController 推送"}})]),t._v(" "),s("p",[t._v("本质上，它替代了方案一的 DemoWebSocketMessageListener 类，走 HTTP 上行消息，替代 WebSocket 上行消息。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("疑问：WebSocketSenderApi 是什么？")]),t._v(" "),s("p",[t._v("它是由 "),s("code",[t._v("yudao-module-infra-biz")]),t._v(" 对 WebSocketMessageSender 的封装，因为只有它（"),s("code",[t._v("yudao-module-infra-biz")]),t._v("）可以访问到 WebSocketMessageSender 的实现类，所以需要通过 API 的方式，暴露给其它模块使用。")]),t._v(" "),s("p",[t._v("这也是为什么 "),s("code",[t._v("yudao-module-system-biz")]),t._v(" 模块，需要引入 "),s("code",[t._v("yudao-module-infra-api")]),t._v(" 依赖的原因。")])]),t._v(" "),s("h4",{attrs:{id:"_2-2-2-前端代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-前端代码"}},[t._v("#")]),t._v(" 2.2.2 前端代码")]),t._v(" "),s("p",[t._v("【相同】① 建立 WebSocket 连接，和方案一相同，不重复截图。")]),t._v(" "),s("p",[t._v("【不同】② 发送 HTTP 消息，如下图所示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/WebSocket/%E5%85%AC%E5%91%8A%E9%80%9A%E7%9F%A5%E7%9A%84%E5%89%8D%E7%AB%AF%E8%B0%83%E7%94%A8.png",alt:"HTTP 发送消息"}})]),t._v(" "),s("p",[t._v("本质上，它替代了方案一的 WebSocket 上行消息，走 HTTP 上行消息。")]),t._v(" "),s("p",[t._v("【相同】③ 接收 WebSocket 消息，和方案一相同，不重复截图。")]),t._v(" "),s("h3",{attrs:{id:"_2-3-如何选择"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-如何选择"}},[t._v("#")]),t._v(" 2.3 如何选择？")]),t._v(" "),s("p",[t._v("我个人是倾向于方案二的，使用 HTTP 上行消息，使用 WebSocket 下行消息。原因如下：")]),t._v(" "),s("p",[t._v("① "),s("code",[t._v("yudao-module-infra-biz")]),t._v(" 扮演一个 WebSocket 服务的角色，可以通过它来主动发送（下行）消息给前端。这样，未来如果使用 MQTT 中间件（例如说，EMQX、阿里云 MQTT、腾讯云 MQTT 等）替换现有 WebSocket 也比较方便。")]),t._v(" "),s("p",[t._v("② HTTP 上行消息，相比 WebSocket 上行消息来说，更加方便，也比较符合我们的编码习惯。")]),t._v(" "),s("p",[t._v("③ 在微服务架构下，多个服务是拆分开的，无法提供相同的 WebSocket 连接。例如说，"),s("code",[t._v("yudao-module-infra-biz")]),t._v(" 和 "),s("code",[t._v("yudao-module-system-biz")]),t._v(" 两个服务都需要有 WebSocket 推送能力时，需要前端分别连接它们两个服务。")]),t._v(" "),s("p",[t._v("考虑到 "),s("code",[t._v("ruoyi-vue-pro")]),t._v(" 和 "),s("code",[t._v("yudao-cloud")]),t._v(" 架构的统一性，还是只让 "),s("code",[t._v("yudao-module-infra-biz")]),t._v(" 提供 WebSocket 服务：")]),t._v(" "),s("ul",[s("li",[t._v("前端连接 "),s("code",[t._v("yudao-module-infra-biz")]),t._v(" 的 WebSocket 服务，其它服务通过 "),s("code",[t._v("yudao-module-infra-biz")]),t._v(" 下行消息。")]),t._v(" "),s("li",[t._v("前端 HTTP 上行消息时，还是通过 HTTP 调用各个服务。")])]),t._v(" "),s("p",[t._v("ps：如果你只用 "),s("code",[t._v("ruoyi-vue-pro")]),t._v(" 单体架构，不会存在 ③ 的困扰，方案一也没问题。")]),t._v(" "),s("h2",{attrs:{id:"_3-实战案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-实战案例"}},[t._v("#")]),t._v(" 3. 实战案例")]),t._v(" "),s("p",[t._v("① "),s("RouterLink",{attrs:{to:"/mall/kefu/"}},[t._v("《商城 —— 在线客服》")])],1),t._v(" "),s("p",[t._v("one more thing~ 后续我们会使用 WebSocket 实现 IM 即时通信功能，敬请期待。")])])}),[],!1,null,null,null);s.default=n.exports}}]);