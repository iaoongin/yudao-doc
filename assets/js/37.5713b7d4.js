(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{366:function(t,a,s){"use strict";s.r(a);var n=s(7),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("项目使用 "),a("a",{attrs:{href:"https://hibernate.org/validator/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hibernate Validator"),a("OutboundLink")],1),t._v(" 框架，对 RESTful API 接口进行参数的校验，以保证最终数据入库的正确性。例如说，用户注册时，会校验手机格式的正确性，密码非弱密码。")]),t._v(" "),a("p",[t._v("如果参数校验不通过，会抛出 ConstraintViolationException 异常，被全局的"),a("a",{attrs:{href:"/exception"}},[t._v("异常处理")]),t._v("捕获，返回“请求参数不正确”的响应。示例如下：")]),t._v(" "),a("div",{staticClass:"language-JSON extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"code"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"msg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请求参数不正确:密码不能为空"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_1-参数校验注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-参数校验注解"}},[t._v("#")]),t._v(" 1. 参数校验注解")]),t._v(" "),a("p",[t._v("Validator 内置了 20+ 个参数校验注解，整理成常用与不常用的注解。")]),t._v(" "),a("h3",{attrs:{id:"_1-1-常用注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-常用注解"}},[t._v("#")]),t._v(" 1.1 常用注解")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("注解")]),t._v(" "),a("th",[t._v("功能")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("@NotBlank")])]),t._v(" "),a("td",[t._v("只能用于字符串不为 "),a("code",[t._v("null")]),t._v(" ，并且字符串 "),a("code",[t._v("#trim()")]),t._v(" 以后 length 要大于 0")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@NotEmpty")])]),t._v(" "),a("td",[t._v("集合对象的元素不为 0 ，即集合不为空，也可以用于字符串不为 "),a("code",[t._v("null")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@NotNull")])]),t._v(" "),a("td",[t._v("不能为 "),a("code",[t._v("null")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Pattern(value)")])]),t._v(" "),a("td",[t._v("被注释的元素必须符合指定的正则表达式")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Max(value)")])]),t._v(" "),a("td",[t._v("该字段的值只能小于或等于该值")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Min(value)")])]),t._v(" "),a("td",[t._v("该字段的值只能大于或等于该值")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Range(min=, max=)")])]),t._v(" "),a("td",[t._v("检被注释的元素必须在合适的范围内")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Size(max, min)")])]),t._v(" "),a("td",[t._v("检查该字段的 "),a("code",[t._v("size")]),t._v(" 是否在 "),a("code",[t._v("min")]),t._v(" 和 "),a("code",[t._v("max")]),t._v(" 之间，可以是字符串、数组、集合、Map 等")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Length(max, min)")])]),t._v(" "),a("td",[t._v("被注释的字符串的大小必须在指定的范围内。")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@AssertFalse")])]),t._v(" "),a("td",[t._v("被注释的元素必须为 "),a("code",[t._v("true")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@AssertTrue")])]),t._v(" "),a("td",[t._v("被注释的元素必须为 "),a("code",[t._v("false")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Email")])]),t._v(" "),a("td",[t._v("被注释的元素必须是电子邮箱地址")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@URL(protocol=,host=,port=,regexp=,flags=)")])]),t._v(" "),a("td",[t._v("被注释的字符串必须是一个有效的 URL")])])])]),t._v(" "),a("h3",{attrs:{id:"_1-2-不常用注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-不常用注解"}},[t._v("#")]),t._v(" 1.2 不常用注解")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("注解")]),t._v(" "),a("th",[t._v("功能")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("@Null")])]),t._v(" "),a("td",[t._v("必须为 "),a("code",[t._v("null")])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@DecimalMax(value)")])]),t._v(" "),a("td",[t._v("被注释的元素必须是一个数字，其值必须小于等于指定的最大值")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@DecimalMin(value)")])]),t._v(" "),a("td",[t._v("被注释的元素必须是一个数字，其值必须大于等于指定的最小值")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Digits(integer, fraction)")])]),t._v(" "),a("td",[t._v("被注释的元素必须是一个数字，其值必须在可接受的范围内")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Positive")])]),t._v(" "),a("td",[t._v("判断正数")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@PositiveOrZero")])]),t._v(" "),a("td",[t._v("判断正数或 0")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Negative")])]),t._v(" "),a("td",[t._v("判断负数")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@NegativeOrZero")])]),t._v(" "),a("td",[t._v("判断负数或 0")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Future")])]),t._v(" "),a("td",[t._v("被注释的元素必须是一个将来的日期")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@FutureOrPresent")])]),t._v(" "),a("td",[t._v("判断日期是否是将来或现在日期")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@Past")])]),t._v(" "),a("td",[t._v("检查该字段的日期是在过去")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@PastOrPresent")])]),t._v(" "),a("td",[t._v("判断日期是否是过去或现在日期")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("@SafeHtml")])]),t._v(" "),a("td",[t._v("判断提交的 HTML 是否安全。例如说，不能包含 JavaScript 脚本等等")])])])]),t._v(" "),a("h2",{attrs:{id:"_2-参数校验使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-参数校验使用"}},[t._v("#")]),t._v(" 2. 参数校验使用")]),t._v(" "),a("p",[t._v("只需要三步，即可开启参数校验的功能。")]),t._v(" "),a("p",[t._v("〇 第零步，引入参数校验的 "),a("a",{attrs:{href:"https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("spring-boot-starter-validation")]),a("OutboundLink")],1),t._v(" 依赖。"),a("strong",[t._v("一般不需要做")]),t._v("，项目默认已经引入。")]),t._v(" "),a("p",[t._v("① 第一步，在需要参数校验的类上，添加 "),a("a",{attrs:{href:"https://github.com/spring-projects/spring-framework/blob/main/spring-context/src/main/java/org/springframework/validation/annotation/Validated.java",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("@Validated")]),a("OutboundLink")],1),t._v(" 注解，例如说 Controller、Service 类。代码如下：")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controller 示例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Validated")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Service 示例，一般放在实现类上")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Service")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Validated")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AdminAuthServiceImpl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AdminAuthService")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("② 第二步（情况一）如果方法的参数是 Bean 类型，则在方法参数上添加 "),a("a",{attrs:{href:"https://docs.oracle.com/javaee/7/api/javax/validation/Valid.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("@Valid")]),a("OutboundLink")],1),t._v(" 注解，并在 Bean 类上添加参数校验的注解。代码如下：")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controller 示例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Validated")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PostMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/login"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommonResult")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthLoginRespVO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("login")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestBody")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Valid")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthLoginReqVO")]),t._v(" reqVO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Service 示例，一般放在接口上")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AdminAuthService")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("login")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Valid")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthLoginReqVO")]),t._v(" reqVO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" userIp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" userAgent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Bean 类的示例。一般建议添加参数注解到属性上。原因：采用 Lombok 后，很少使用 getter 方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AuthLoginReqVO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@NotEmpty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"登录账号不能为空"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("min "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"账号长度为 4-16 位"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Pattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("regexp "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^[A-Za-z0-9]+$"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"账号格式为数字以及字母"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@NotEmpty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"密码不能为空"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("min "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"密码长度为 4-16 位"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("② 第二步（情况二）如果方法的参数是普通类型，则在方法参数上直接添加参数校验的注解。代码如下：")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controller 示例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Validated")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DictDataController")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/get"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommonResult")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DictDataRespVO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDictData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestParam")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@NotNull")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"编号不能为空"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Service 示例，一般放在接口上")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DictDataService")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DictDataDO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDictData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@NotNull")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"编号不能为空"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("③ 启动项目，模拟调用 RESTful API 接口，少填写几个参数，看看参数校验是否生效。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("疑问：Controller 做了参数校验后，Service 是否需要做参数校验？")]),t._v(" "),a("p",[t._v("是需要的。Service 可能会被别的 Service 进行调用，也会存在参数不正确的情况，所以必须进行参数校验。")])]),t._v(" "),a("h2",{attrs:{id:"_3-自定义注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-自定义注解"}},[t._v("#")]),t._v(" 3. 自定义注解")]),t._v(" "),a("p",[t._v("如果 Validator 内置的参数校验注解不满足需求时，我们也可以"),a("strong",[t._v("自定义")]),t._v("参数校验的注解。")]),t._v(" "),a("p",[t._v("在项目的 "),a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-common/",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("yudao-common")]),a("OutboundLink")],1),t._v(" 的 "),a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/validation/",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("validation")]),a("OutboundLink")],1),t._v(" 包下，就自定义了多个参数校验的注解，以 "),a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/validation/Mobile.java",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("@Mobile")]),a("OutboundLink")],1),t._v(" 注解来举例，它提供了手机格式的校验。")]),t._v(" "),a("p",[t._v("① 第一步，新建 "),a("code",[t._v("@Mobile")]),t._v(" 注解，并设置自定义校验器为 "),a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/validation/MobileValidator.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("MobileValidator"),a("OutboundLink")],1),t._v(" 类。代码如下：")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Target")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ElementType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("METHOD")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ElementType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FIELD")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ElementType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ANNOTATION_TYPE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ElementType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CONSTRUCTOR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ElementType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PARAMETER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ElementType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TYPE_USE")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Retention")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RetentionPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RUNTIME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Documented")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Constraint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        validatedBy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MobileValidator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置校验器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Mobile")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"手机号格式不正确"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("groups")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Payload")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("payload")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("② 第二步，新建  "),a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-common/src/main/java/cn/iocoder/yudao/framework/common/validation/MobileValidator.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("MobileValidator"),a("OutboundLink")],1),t._v(" 校验器。代码如下：")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MobileValidator")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConstraintValidator")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Mobile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initialize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Mobile")]),t._v(" annotation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isValid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConstraintValidatorContext")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果手机号为空，默认不校验，即校验通过")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StrUtil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 校验手机")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ValidationUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isMobile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("③ 第三步，在需要手机格式校验的参数上添加 "),a("code",[t._v("@Mobile")]),t._v(" 注解。示例代码如下：")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AppAuthLoginReqVO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@NotEmpty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"手机号不能为空"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Mobile")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <=== here")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" mobile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_4-更多使用文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-更多使用文档"}},[t._v("#")]),t._v(" 4. 更多使用文档")]),t._v(" "),a("p",[t._v("更多关于 Validator 的使用，可以系统阅读 "),a("a",{attrs:{href:"https://www.iocoder.cn/Spring-Boot/Validation/?yudao",target:"_blank",rel:"noopener noreferrer"}},[t._v("《芋道 Spring Boot 参数校验 Validation 入门 》"),a("OutboundLink")],1),t._v(" 文章。")]),t._v(" "),a("p",[t._v("例如说，手动参数校验、分组校验、国际化 i18n 等等。")]),t._v(" "),a("h2",{attrs:{id:"_5-时间传参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-时间传参"}},[t._v("#")]),t._v(" 5. 时间传参")]),t._v(" "),a("h3",{attrs:{id:"_5-1-query-时间传参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-query-时间传参"}},[t._v("#")]),t._v(" 5.1 Query 时间传参")]),t._v(" "),a("p",[t._v("Query 时间传参，指的是 "),a("code",[t._v("GET")]),t._v(" 请求、或者 "),a("code",[t._v("POST")]),t._v(" 的 form-data 请求。")]),t._v(" "),a("p",[t._v("① 后端接收时间参数时，需要添加 SpringMVC 的 "),a("code",[t._v("@DateTimeFormat")]),t._v(" 注解，并设置时间格式。例如说：")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// JobLogPageReqVO.java")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@DateTimeFormat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),t._v(" beginTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// UserPageReqVO.java")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@DateTimeFormat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" createTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("② 前端传递时间参数时，需要时间格式为 "),a("code",[t._v("yyyy-MM-dd HH:mm:ss")]),t._v("，和上面的 "),a("code",[t._v("FORMAT_YEAR_MONTH_DAY_HOUR_MINUTE_SECOND")]),t._v(" 对应。例如说前端 "),a("code",[t._v("yudao-ui-admin-vue3")]),t._v(" 项目：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("views/infra/job/logger/index.vue")]),t._v(" 的 "),a("code",[t._v("beginTime")]),t._v(" 或 "),a("code",[t._v("endTime")]),t._v(" 参数\n"),a("img",{attrs:{src:"/img/%E5%90%8E%E7%AB%AF%E6%89%8B%E5%86%8C/%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C/%E5%8D%95%E4%B8%AA%E6%97%B6%E9%97%B4%E4%BC%A0%E5%8F%82.png",alt:"单个时间传参"}})])]),t._v(" "),a("li",[a("p",[a("code",[t._v("views/system/user/index.vue")]),t._v(" 的 "),a("code",[t._v("createTime")]),t._v(" 参数\n"),a("img",{attrs:{src:"/img/%E5%90%8E%E7%AB%AF%E6%89%8B%E5%86%8C/%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C/%E5%A4%9A%E4%B8%AA%E6%97%B6%E9%97%B4%E4%BC%A0%E5%8F%82.png",alt:"多个时间传参"}})])])]),t._v(" "),a("h3",{attrs:{id:"_5-2-request-body-时间传参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-request-body-时间传参"}},[t._v("#")]),t._v(" 5.2 Request Body 时间传参")]),t._v(" "),a("p",[t._v("Request Body 时间传参，指的是 "),a("code",[t._v("Post")]),t._v("、"),a("code",[t._v("PUT")]),t._v(" 等请求，通过 JSON 格式。")]),t._v(" "),a("p",[t._v("① 后端接收时间参数时，需要添加 SpringMVC 的 "),a("code",[t._v("@RequestBody")]),t._v(" 注解，使用 LocalDateTime 属性进行接收。例如说：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E5%90%8E%E7%AB%AF%E6%89%8B%E5%86%8C/%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C/RequestBody-server.png",alt:" 注解"}})]),t._v(" "),a("p",[t._v("② 前端传递时间参数时，需要时间格式为 Long 时间戳。例如说：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("views/system/tenant/TenantForm.vue")]),t._v(" 的 "),a("code",[t._v("expireTime")]),t._v(" 参数")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E5%90%8E%E7%AB%AF%E6%89%8B%E5%86%8C/%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C/RequestBody-client.png",alt:" 时间参数"}})]),t._v(" "),a("h3",{attrs:{id:"_5-3-response-body-时间响应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-response-body-时间响应"}},[t._v("#")]),t._v(" 5.3 Response Body 时间响应")]),t._v(" "),a("p",[t._v("JSON 返回的时间，使用 LocalDateTime 定义属性，会被序列化为 Long 时间戳进行相应。")]),t._v(" "),a("p",[t._v("例如说 TenantRespVO 的 "),a("code",[t._v("createTime")]),t._v(" 属性，效果如下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E5%90%8E%E7%AB%AF%E6%89%8B%E5%86%8C/%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C/ResponseBody-client.png",alt:"Response Body 时间响应"}})]),t._v(" "),a("h3",{attrs:{id:"_5-4-如何自定义-json-时间格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-如何自定义-json-时间格式"}},[t._v("#")]),t._v(" 5.4 如何自定义 JSON 时间格式？")]),t._v(" "),a("h4",{attrs:{id:"_5-4-1-为什么使用-long-时间戳呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-1-为什么使用-long-时间戳呢"}},[t._v("#")]),t._v(" 5.4.1 为什么使用 Long 时间戳呢？")]),t._v(" "),a("p",[t._v("每个项目希望展示的时间格式可能不同，有希望 "),a("code",[t._v("yyyy-MM-dd HH:mm:ss")]),t._v("，也有希望 "),a("code",[t._v("yyyy/MM/dd HH:mm:ss")]),t._v("，又或者是其它。")]),t._v(" "),a("p",[t._v("而 Long 时间戳是比较标准的，没有任何“产品需求”的味道，所以使用它。 至于业务希望展示成什么样子，可以通过前端封装统一的 format 方法去实现，更加规范。")]),t._v(" "),a("p",[t._v("它是通过 LocalDateTime 自定义的 TimestampLocalDateTimeSerializer 和 TimestampLocalDateTimeDeserializer 实现，之后进行如下配置：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E5%90%8E%E7%AB%AF%E6%89%8B%E5%86%8C/%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C/YudaoJacksonAutoConfiguration.png",alt:"YudaoJacksonAutoConfiguration"}})]),t._v(" "),a("h4",{attrs:{id:"_5-4-1-全局配置时间格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-1-全局配置时间格式"}},[t._v("#")]),t._v(" 5.4.1 全局配置时间格式")]),t._v(" "),a("p",[t._v("如果你想 JSON 全局配置成 "),a("code",[t._v("yyyy-MM-dd HH:mm:ss")]),t._v(" 或其它时间格式，通过使用 Jackson 内置的 LocalDateTimeSerializer 和 LocalDateTimeDeserializer 即可，如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E5%90%8E%E7%AB%AF%E6%89%8B%E5%86%8C/%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C/%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F.png",alt:"全局配置时间格式"}})]),t._v(" "),a("h4",{attrs:{id:"_5-4-2-局部配置时间格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-2-局部配置时间格式"}},[t._v("#")]),t._v(" 5.4.2 局部配置时间格式")]),t._v(" "),a("p",[t._v("如果只是部分 VO 的字段想自定义 "),a("code",[t._v("yyyy-MM-dd HH:mm:ss")]),t._v(" 或其它时间格式，可通过 Jackson 内置的 "),a("code",[t._v("@JsonFormat")]),t._v(" 注解，如下所示：")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// UserRespVO.java")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@JsonSerialize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("using "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTimeSerializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 序列化（响应）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@JsonDeserialize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("using "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateDeserializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 反序列化（请求）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@JsonFormat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yyyy-MM-dd HH:mm:ss"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocalDateTime")]),t._v(" createTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);