(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{379:function(t,a,s){"use strict";s.r(a);var e=s(7),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-protection/",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("yudao-spring-boot-starter-protection")]),a("OutboundLink")],1),t._v(" 技术组件，由它的 "),a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-protection/src/main/java/cn/iocoder/yudao/framework/idempotent/",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("idempotent")]),a("OutboundLink")],1),t._v(" 包，提供声明式的幂等特性，可防止重复请求。例如说，用户快速的双击了某个按钮，前端没有禁用该按钮，导致发送了两次重复的请求。")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// UserController.java")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Idempotent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timeUnit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimeUnit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SECONDS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"正在添加用户中，请勿重复提交"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PostMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/user/create"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createUser")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    userService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createUser")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"添加成功"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("每 10 秒钟，所有用户，只能操作一次")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("疑问：如果想按照每个用户，或者每个 IP，限制请求呢？")]),t._v(" "),a("p",[t._v("可设置该注解的 "),a("code",[t._v("keyResolver")]),t._v(" 属性，可选择的有：")]),t._v(" "),a("ul",[a("li",[t._v("DefaultIdempotentKeyResolver：全局级别")]),t._v(" "),a("li",[t._v("UserIdempotentKeyResolver：用户级别")]),t._v(" "),a("li",[t._v("ExpressionIdempotentKeyResolver：自定义级别，通过 "),a("code",[t._v("keyArg")]),t._v(" 属性指定 Spring EL 表达式")])])]),t._v(" "),a("h2",{attrs:{id:"_1-实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-实现原理"}},[t._v("#")]),t._v(" 1. 实现原理")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("友情提示：")]),t._v(" "),a("p",[t._v("它的实现原理，和 "),a("RouterLink",{attrs:{to:"/rate-limiter/"}},[t._v("《请求限流（RateLimiter）》")]),t._v(" 比较接近哈。")],1)]),t._v(" "),a("p",[t._v("它的实现原理非常简单，针对相同参数的方法，一段时间内，有且仅能执行一次。执行流程如下：")]),t._v(" "),a("p",[t._v("① 在方法执行前，根据参数对应的 Key 查询是否存在：")]),t._v(" "),a("ul",[a("li",[t._v("如果"),a("strong",[t._v("存在")]),t._v("，说明正在执行中，则进行报错。")]),t._v(" "),a("li",[t._v("如果"),a("strong",[t._v("不在")]),t._v("，则计算参数对应的 Key，存储到 Redis 中，并设置过期时间，即标记正在执行中。")])]),t._v(" "),a("p",[t._v("默认参数的 Redis Key 的计算规则由 "),a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-protection/src/main/java/cn/iocoder/yudao/framework/idempotent/core/keyresolver/impl/DefaultIdempotentKeyResolver.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("DefaultIdempotentKeyResolver"),a("OutboundLink")],1),t._v(" 实现，使用 MD5(方法名 + 方法参数)，避免 Redis Key 过长。")]),t._v(" "),a("p",[t._v("② 方法执行完成，"),a("strong",[t._v("不会")]),t._v("主动删除参数对应的 Key。")]),t._v(" "),a("p",[t._v("如果希望会"),a("strong",[t._v("主动")]),t._v("删除 Key，可以使用 "),a("a",{attrs:{href:"/distributed-lock"}},[t._v("《开发指南 —— 分布式锁》")]),t._v(" 提供的 "),a("code",[t._v("@Lock")]),t._v(" 来实现幂等性。")]),t._v(" "),a("p",[t._v("🙂 从本质上来说，"),a("code",[t._v("idempotent")]),t._v(" 包提供的幂等特性，本质上也是基于 Redis 实现的分布式锁。")]),t._v(" "),a("p",[t._v("③ 如果方法执行时间较长，超过 Key 的过期时间，则 Redis 会自动删除对应的 Key。因此，需要大概评估下，避免方法的执行时间超过过期时间。")]),t._v(" "),a("p",[t._v("④ 如果方法执行发生 Exception 异常时，默认会删除 Key，避免下次请求无法正常执行，此处参考 "),a("a",{attrs:{href:"https://tech.meituan.com/2016/09/29/distributed-system-mutually-exclusive-idempotence-cerberus-gtis.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《美团 GTIS》"),a("OutboundLink")],1),t._v(" 。")]),t._v(" "),a("h2",{attrs:{id:"_2-idempotent-注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-idempotent-注解"}},[t._v("#")]),t._v(" 2. "),a("code",[t._v("@Idempotent")]),t._v(" 注解")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-protection/src/main/java/cn/iocoder/yudao/framework/idempotent/core/annotation/Idempotent.java",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("@Idempotent")]),a("OutboundLink")],1),t._v(" 注解，声明在方法上，表示该方法需要开启幂等性。代码如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E5%90%8E%E7%AB%AF%E6%89%8B%E5%86%8C/%E5%B9%82%E7%AD%89%E6%80%A7/%E6%B3%A8%E8%A7%A3.png",alt:" 注解"}})]),t._v(" "),a("p",[t._v("① 对应的 AOP 切面是 "),a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-protection/src/main/java/cn/iocoder/yudao/framework/idempotent/core/aop/IdempotentAspect.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("IdempotentAspect"),a("OutboundLink")],1),t._v(" 类，核心就 10 行左右的代码，如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E5%90%8E%E7%AB%AF%E6%89%8B%E5%86%8C/%E5%B9%82%E7%AD%89%E6%80%A7/IdempotentAspect.png",alt:"IdempotentAspect 切面"}})]),t._v(" "),a("p",[t._v("② 对应的 Redis Key 的前缀是 "),a("code",[t._v("idempotent:%s")]),t._v("，可见 "),a("a",{attrs:{href:"https://github.com/YunaiV/ruoyi-vue-pro/blob/master/yudao-framework/yudao-spring-boot-starter-protection/src/main/java/cn/iocoder/yudao/framework/idempotent/core/redis/IdempotentRedisDAO.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("IdempotentRedisDAO"),a("OutboundLink")],1),t._v(" 类，如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E5%90%8E%E7%AB%AF%E6%89%8B%E5%86%8C/%E5%B9%82%E7%AD%89%E6%80%A7/IdempotentRedisDAO.png",alt:"IdempotentRedisDAO 存储"}})]),t._v(" "),a("h2",{attrs:{id:"_3-使用示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用示例"}},[t._v("#")]),t._v(" 3. 使用示例")]),t._v(" "),a("p",[t._v("本小节，我们实现 "),a("code",[t._v("/admin-api/infra/test-demo/get")]),t._v(" RESTful API 接口的幂等性。")]),t._v(" "),a("p",[t._v("① 在 "),a("code",[t._v("pom.xml")]),t._v(" 文件中，引入 "),a("code",[t._v("yudao-spring-boot-starter-protection")]),t._v(" 依赖。")]),t._v(" "),a("div",{staticClass:"language-XML extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("cn.iocoder.boot"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("yudao-spring-boot-starter-protection"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("② 在该 API 接口的对应方法上，添加 "),a("code",[t._v("@Idempotent")]),t._v(" 注解。代码如下：")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TestDemoController.java")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@GetMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/get"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Idempotent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"重复请求，请稍后重试"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommonResult")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TestDemoRespVO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTestDemo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestParam")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... 省略代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("③ 调用该 API 接口，执行成功。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/%E5%90%8E%E7%AB%AF%E6%89%8B%E5%86%8C/%E5%B9%82%E7%AD%89%E6%80%A7/%E6%A1%88%E4%BE%8B.png",alt:"调用成功"}})]),t._v(" "),a("p",[t._v("④ 再次调用该 API 接口，被幂等性拦截，执行失败。")]),t._v(" "),a("div",{staticClass:"language-JSON extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"code"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("900")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"data"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"msg"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"重复请求，请稍后重试"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);